{"version":3,"sources":["agm-direction.umd.js"],"names":["global","factory","exports","module","require","define","amd","ng","angularLibraryStarter","core","rxjs","operators","common","this","GoogleMapsScriptProtocol","MapsAPILoader","decorators","type","Injectable","GoogleMapsAPIWrapper","_loader","_zone","_this","_map","Promise","resolve","_mapResolver","prototype","createMap","el","mapOptions","runOutsideAngular","load","then","map","google","maps","Map","setMapOptions","options","m","setOptions","createMarker","addToMap","Marker","createInfoWindow","InfoWindow","createCircle","Circle","createRectangle","Rectangle","createPolyline","getNativeMap","line","Polyline","setMap","createPolygon","polygon","Polygon","createDataLayer","data","Data","containsLocation","latLng","geometry","poly","subscribeToMapEvent","eventName","Observable","observer","addListener","arg","run","next","clearInstanceListeners","event","setCenter","getZoom","getBounds","getMapTypeId","setZoom","zoom","getCenter","panTo","panBy","x","y","fitBounds","panToBounds","triggerMapEvent","trigger","ctorParameters","NgZone","MarkerManager","_mapsWrapper","_markers","deleteMarker","marker","get","delete","updateMarkerPosition","setPosition","lat","latitude","lng","longitude","updateTitle","setTitle","title","updateLabel","setLabel","label","updateDraggable","setDraggable","draggable","updateIcon","setIcon","iconUrl","updateOpacity","setOpacity","opacity","updateVisible","setVisible","visible","updateZIndex","setZIndex","zIndex","updateClickable","setClickable","clickable","updateAnimation","animation","setAnimation","Animation","addMarker","markerPromise","position","icon","set","getNativeMarker","createEventObservable","e","InfoWindowManager","_markerManager","_infoWindows","deleteInfoWindow","infoWindow","iWindow","i","close","open","w","hostMarker","addInfoWindow","content","maxWidth","disableAutoPan","infoWindowPromise","FitBoundsAccessor","infoWindowId","AgmInfoWindow","_infoWindowManager","_el","isOpen","infoWindowClose","EventEmitter","_infoWindowAddedToManager","_id","toString","ngOnInit","nativeElement","querySelector","_updateOpenState","_registerEventListeners","ngOnChanges","changes","_setInfoWindowOptions","subscribe","emit","Object","keys","filter","k","_infoWindowOptionsInputs","indexOf","forEach","currentValue","id","ngOnDestroy","Component","args","selector","template","ElementRef","propDecorators","Input","Output","markerId","WindowRef","AgmMarker","openInfoWindow","markerClick","markerRightClick","dragEnd","mouseOver","mouseOut","QueryList","_markerAddedToManger","_observableSubscriptions","_fitBoundsDetails$","ReplaySubject","ngAfterContentInit","handleInfoWindowUpdate","length","Error","Number","_updateFitBoundsDetails","_addEventListeners","getFitBoundsDetails$","asObservable","cs","push","rc","ds","coords","mover","mout","s","unsubscribe","Directive","providers","provide","useExisting","forwardRef","inputs","outputs","ContentChildren","getNativeWindow","window","DocumentRef","getNativeDocument","document","__extends","extendStatics","setPrototypeOf","__proto__","Array","d","b","p","hasOwnProperty","__","constructor","create","LAZY_MAPS_API_CONFIG","InjectionToken","_super","LazyMapsAPILoader","config","call","_SCRIPT_ID","callbackName","_config","_windowRef","_documentRef","_scriptLoadingPromise","scriptOnPage","getElementById","_assignScriptLoadingPromise","script","createElement","async","defer","src","_getScriptSrc","body","appendChild","scriptElem","reject","onerror","error","protocol","HTTPS","AUTO","HTTP","hostAndPath","queryParams","v","apiVersion","callback","key","apiKey","client","clientId","channel","libraries","region","language","isArray","value","join","entry","undefined","Optional","Inject","__extends$1","__read","o","n","Symbol","iterator","r","ar","done","HttpHandler","HttpBackend","HttpHeaders","headers","normalizedNames","lazyUpdate","lazyInit","split","index","name_1","slice","toLowerCase","trim","maybeSetNormalizedName","has","name","values","init","from","getAll","append","clone","op","lcName","copyFrom","update","applyUpdate","other","concat","base","apply","arguments","__spread","toDelete_1","existing","fn","HttpUrlEncodingCodec","encodeKey","standardEncoding","encodeValue","decodeKey","decodeURIComponent","decodeValue","encodeURIComponent","replace","HttpParams","rawParams","codec","map$$1","updates","cloneFrom","encoder","fromString","fromObject","param","eqIdx","_a","val","list","res","eKey","base_1","idx","splice","isArrayBuffer","ArrayBuffer","isBlob","Blob","isFormData","FormData","HttpEventType","HttpRequest","method","url","third","fourth","reportProgress","withCredentials","responseType","toUpperCase","mightHaveBody","params","urlWithParams","qIdx","sep","serializeBody","JSON","stringify","detectContentTypeHeader","setHeaders","reduce","setParams","HttpResponseBase","defaultStatus","defaultStatusText","status","statusText","ok","HttpHeaderResponse","ResponseHeader","HttpResponse","Response","HttpErrorResponse","message","addBody","observe","HttpClient","handler","request","first","req","events$","of","pipe","concatMap","handle","res$","head","jsonp","callbackParam","patch","post","put","HttpInterceptorHandler","interceptor","intercept","HTTP_INTERCEPTORS","NoopInterceptor","XSSI_PREFIX","XhrFactory","BrowserXhr","build","XMLHttpRequest","HttpXhrBackend","xhrFactory","xhr","setRequestHeader","detectedType","reqBody","headerResponse","partialFromXhr","getAllResponseHeaders","responseURL","test","getResponseHeader","getResponseUrl","onLoad","response","responseText","originalBody","parse","text","complete","onError","sentHeaders","onDownProgress","progressEvent","DownloadProgress","loaded","lengthComputable","total","partialText","onUpProgress","progress","UploadProgress","addEventListener","upload","send","Sent","removeEventListener","abort","XSRF_COOKIE_NAME","XSRF_HEADER_NAME","HttpXsrfTokenExtractor","HttpXsrfCookieExtractor","doc","platform","cookieName","lastCookieString","lastToken","parseCount","getToken","cookieString","cookie","ɵparseCookieValue","DOCUMENT","PLATFORM_ID","HttpXsrfInterceptor","tokenService","headerName","lcUrl","startsWith","token","HttpInterceptingHandler","backend","injector","chain","interceptors","reduceRight","Injector","HttpClientXsrfModule","disable","ngModule","useClass","withOptions","useValue","NgModule","multi","HttpClientModule","imports","AgmDirection","gmapsApi","http","travelMode","transitOptions","drivingOptions","waypoints","optimizeWaypoints","provideRouteAlternatives","avoidHighways","avoidTolls","onChange","onResponse","sendInfoWindow","directionsService","directionsDisplay","waypointsMarker","isFirstChange","directionDraw","obj","renderOptions","firstChange","originMarker","destinationMarker","setPanel","DirectionsRenderer","getDirections","DirectionsService","panel","requestObj","origin","destination","hash","h","Math","imul","charCodeAt","hashCode","renderRoute","setDirections","featureToggles","CacheThirdPartyApi","cacheResponse","console","log","route","saveRes","markerOptions","clearListeners","err","_route_1","routes","legs","start_location","setMarker","start_address","end_location","end_address","waypoint","via_waypoints","_route_2","_route_3","markerOpts","infowindoContent","setContent","AgmDirectionModule","forRoot","declarations","ɵa","defineProperty"],"mappings":"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","file":"agm-direction.umd.min.js.map","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('rxjs'), require('rxjs/operators'), require('@angular/common')) :\n    typeof define === 'function' && define.amd ? define('agm-direction', ['exports', '@angular/core', 'rxjs', 'rxjs/operators', '@angular/common'], factory) :\n    (factory((global.ng = global.ng || {}, global.ng.angularLibraryStarter = {}),global.ng.core,global.rxjs,global.rxjs.operators,global.ng.common));\n}(this, (function (exports,core,rxjs,operators,common) { 'use strict';\n\n    var MapsAPILoader = /** @class */ (function () {\n        function MapsAPILoader() {\n        }\n        MapsAPILoader.decorators = [\n            { type: core.Injectable },\n        ];\n        return MapsAPILoader;\n    }());\n\n    /**\n     * Wrapper class that handles the communication with the Google Maps Javascript\n     * API v3\n     */\n    var GoogleMapsAPIWrapper = /** @class */ (function () {\n        function GoogleMapsAPIWrapper(_loader, _zone) {\n            var _this = this;\n            this._loader = _loader;\n            this._zone = _zone;\n            this._map =\n                new Promise(function (resolve) { _this._mapResolver = resolve; });\n        }\n        GoogleMapsAPIWrapper.prototype.createMap = function (el, mapOptions) {\n            var _this = this;\n            return this._zone.runOutsideAngular(function () {\n                return _this._loader.load().then(function () {\n                    var map = new google.maps.Map(el, mapOptions);\n                    _this._mapResolver(map);\n                    return;\n                });\n            });\n        };\n        GoogleMapsAPIWrapper.prototype.setMapOptions = function (options) {\n            this._map.then(function (m) { m.setOptions(options); });\n        };\n        /**\n         * Creates a google map marker with the map context\n         */\n        /**\n           * Creates a google map marker with the map context\n           */\n        GoogleMapsAPIWrapper.prototype.createMarker = /**\n           * Creates a google map marker with the map context\n           */\n        function (options, addToMap) {\n            if (options === void 0) { options = {}; }\n            if (addToMap === void 0) { addToMap = true; }\n            return this._map.then(function (map) {\n                if (addToMap) {\n                    options.map = map;\n                }\n                return new google.maps.Marker(options);\n            });\n        };\n        GoogleMapsAPIWrapper.prototype.createInfoWindow = function (options) {\n            return this._map.then(function () { return new google.maps.InfoWindow(options); });\n        };\n        /**\n         * Creates a google.map.Circle for the current map.\n         */\n        /**\n           * Creates a google.map.Circle for the current map.\n           */\n        GoogleMapsAPIWrapper.prototype.createCircle = /**\n           * Creates a google.map.Circle for the current map.\n           */\n        function (options) {\n            return this._map.then(function (map) {\n                options.map = map;\n                return new google.maps.Circle(options);\n            });\n        };\n        /**\n         * Creates a google.map.Rectangle for the current map.\n         */\n        /**\n           * Creates a google.map.Rectangle for the current map.\n           */\n        GoogleMapsAPIWrapper.prototype.createRectangle = /**\n           * Creates a google.map.Rectangle for the current map.\n           */\n        function (options) {\n            return this._map.then(function (map) {\n                options.map = map;\n                return new google.maps.Rectangle(options);\n            });\n        };\n        GoogleMapsAPIWrapper.prototype.createPolyline = function (options) {\n            return this.getNativeMap().then(function (map) {\n                var line = new google.maps.Polyline(options);\n                line.setMap(map);\n                return line;\n            });\n        };\n        GoogleMapsAPIWrapper.prototype.createPolygon = function (options) {\n            return this.getNativeMap().then(function (map) {\n                var polygon = new google.maps.Polygon(options);\n                polygon.setMap(map);\n                return polygon;\n            });\n        };\n        /**\n         * Creates a new google.map.Data layer for the current map\n         */\n        /**\n           * Creates a new google.map.Data layer for the current map\n           */\n        GoogleMapsAPIWrapper.prototype.createDataLayer = /**\n           * Creates a new google.map.Data layer for the current map\n           */\n        function (options) {\n            return this._map.then(function (m) {\n                var data = new google.maps.Data(options);\n                data.setMap(m);\n                return data;\n            });\n        };\n        /**\n         * Determines if given coordinates are insite a Polygon path.\n         */\n        /**\n           * Determines if given coordinates are insite a Polygon path.\n           */\n        GoogleMapsAPIWrapper.prototype.containsLocation = /**\n           * Determines if given coordinates are insite a Polygon path.\n           */\n        function (latLng, polygon) {\n            return google.maps.geometry.poly.containsLocation(latLng, polygon);\n        };\n        GoogleMapsAPIWrapper.prototype.subscribeToMapEvent = function (eventName) {\n            var _this = this;\n            return new rxjs.Observable(function (observer) {\n                _this._map.then(function (m) {\n                    m.addListener(eventName, function (arg) { _this._zone.run(function () { return observer.next(arg); }); });\n                });\n            });\n        };\n        GoogleMapsAPIWrapper.prototype.clearInstanceListeners = function () {\n            this._map.then(function (map) {\n                google.maps.event.clearInstanceListeners(map);\n            });\n        };\n        GoogleMapsAPIWrapper.prototype.setCenter = function (latLng) {\n            return this._map.then(function (map) { return map.setCenter(latLng); });\n        };\n        GoogleMapsAPIWrapper.prototype.getZoom = function () { return this._map.then(function (map) { return map.getZoom(); }); };\n        GoogleMapsAPIWrapper.prototype.getBounds = function () {\n            return this._map.then(function (map) { return map.getBounds(); });\n        };\n        GoogleMapsAPIWrapper.prototype.getMapTypeId = function () {\n            return this._map.then(function (map) { return map.getMapTypeId(); });\n        };\n        GoogleMapsAPIWrapper.prototype.setZoom = function (zoom) {\n            return this._map.then(function (map) { return map.setZoom(zoom); });\n        };\n        GoogleMapsAPIWrapper.prototype.getCenter = function () {\n            return this._map.then(function (map) { return map.getCenter(); });\n        };\n        GoogleMapsAPIWrapper.prototype.panTo = function (latLng) {\n            return this._map.then(function (map) { return map.panTo(latLng); });\n        };\n        GoogleMapsAPIWrapper.prototype.panBy = function (x, y) {\n            return this._map.then(function (map) { return map.panBy(x, y); });\n        };\n        GoogleMapsAPIWrapper.prototype.fitBounds = function (latLng) {\n            return this._map.then(function (map) { return map.fitBounds(latLng); });\n        };\n        GoogleMapsAPIWrapper.prototype.panToBounds = function (latLng) {\n            return this._map.then(function (map) { return map.panToBounds(latLng); });\n        };\n        /**\n         * Returns the native Google Maps Map instance. Be careful when using this instance directly.\n         */\n        /**\n           * Returns the native Google Maps Map instance. Be careful when using this instance directly.\n           */\n        GoogleMapsAPIWrapper.prototype.getNativeMap = /**\n           * Returns the native Google Maps Map instance. Be careful when using this instance directly.\n           */\n        function () { return this._map; };\n        /**\n         * Triggers the given event name on the map instance.\n         */\n        /**\n           * Triggers the given event name on the map instance.\n           */\n        GoogleMapsAPIWrapper.prototype.triggerMapEvent = /**\n           * Triggers the given event name on the map instance.\n           */\n        function (eventName) {\n            return this._map.then(function (m) { return google.maps.event.trigger(m, eventName); });\n        };\n        GoogleMapsAPIWrapper.decorators = [\n            { type: core.Injectable },\n        ];\n        /** @nocollapse */\n        GoogleMapsAPIWrapper.ctorParameters = function () { return [\n            { type: MapsAPILoader, },\n            { type: core.NgZone, },\n        ]; };\n        return GoogleMapsAPIWrapper;\n    }());\n\n    var MarkerManager = /** @class */ (function () {\n        function MarkerManager(_mapsWrapper, _zone) {\n            this._mapsWrapper = _mapsWrapper;\n            this._zone = _zone;\n            this._markers = new Map();\n        }\n        MarkerManager.prototype.deleteMarker = function (marker) {\n            var _this = this;\n            var m = this._markers.get(marker);\n            if (m == null) {\n                // marker already deleted\n                return Promise.resolve();\n            }\n            return m.then(function (m) {\n                return _this._zone.run(function () {\n                    m.setMap(null);\n                    _this._markers.delete(marker);\n                });\n            });\n        };\n        MarkerManager.prototype.updateMarkerPosition = function (marker) {\n            return this._markers.get(marker).then(function (m) { return m.setPosition({ lat: marker.latitude, lng: marker.longitude }); });\n        };\n        MarkerManager.prototype.updateTitle = function (marker) {\n            return this._markers.get(marker).then(function (m) { return m.setTitle(marker.title); });\n        };\n        MarkerManager.prototype.updateLabel = function (marker) {\n            return this._markers.get(marker).then(function (m) { m.setLabel(marker.label); });\n        };\n        MarkerManager.prototype.updateDraggable = function (marker) {\n            return this._markers.get(marker).then(function (m) { return m.setDraggable(marker.draggable); });\n        };\n        MarkerManager.prototype.updateIcon = function (marker) {\n            return this._markers.get(marker).then(function (m) { return m.setIcon(marker.iconUrl); });\n        };\n        MarkerManager.prototype.updateOpacity = function (marker) {\n            return this._markers.get(marker).then(function (m) { return m.setOpacity(marker.opacity); });\n        };\n        MarkerManager.prototype.updateVisible = function (marker) {\n            return this._markers.get(marker).then(function (m) { return m.setVisible(marker.visible); });\n        };\n        MarkerManager.prototype.updateZIndex = function (marker) {\n            return this._markers.get(marker).then(function (m) { return m.setZIndex(marker.zIndex); });\n        };\n        MarkerManager.prototype.updateClickable = function (marker) {\n            return this._markers.get(marker).then(function (m) { return m.setClickable(marker.clickable); });\n        };\n        MarkerManager.prototype.updateAnimation = function (marker) {\n            return this._markers.get(marker).then(function (m) {\n                if (typeof marker.animation === 'string') {\n                    m.setAnimation(google.maps.Animation[marker.animation]);\n                }\n                else {\n                    m.setAnimation(marker.animation);\n                }\n            });\n        };\n        MarkerManager.prototype.addMarker = function (marker) {\n            var markerPromise = this._mapsWrapper.createMarker({\n                position: { lat: marker.latitude, lng: marker.longitude },\n                label: marker.label,\n                draggable: marker.draggable,\n                icon: marker.iconUrl,\n                opacity: marker.opacity,\n                visible: marker.visible,\n                zIndex: marker.zIndex,\n                title: marker.title,\n                clickable: marker.clickable,\n                animation: (typeof marker.animation === 'string') ? google.maps.Animation[marker.animation] : marker.animation\n            });\n            this._markers.set(marker, markerPromise);\n        };\n        MarkerManager.prototype.getNativeMarker = function (marker) {\n            return this._markers.get(marker);\n        };\n        MarkerManager.prototype.createEventObservable = function (eventName, marker) {\n            var _this = this;\n            return new rxjs.Observable(function (observer) {\n                _this._markers.get(marker).then(function (m) {\n                    m.addListener(eventName, function (e) { return _this._zone.run(function () { return observer.next(e); }); });\n                });\n            });\n        };\n        MarkerManager.decorators = [\n            { type: core.Injectable },\n        ];\n        /** @nocollapse */\n        MarkerManager.ctorParameters = function () { return [\n            { type: GoogleMapsAPIWrapper, },\n            { type: core.NgZone, },\n        ]; };\n        return MarkerManager;\n    }());\n\n    var InfoWindowManager = /** @class */ (function () {\n        function InfoWindowManager(_mapsWrapper, _zone, _markerManager) {\n            this._mapsWrapper = _mapsWrapper;\n            this._zone = _zone;\n            this._markerManager = _markerManager;\n            this._infoWindows = new Map();\n        }\n        InfoWindowManager.prototype.deleteInfoWindow = function (infoWindow) {\n            var _this = this;\n            var iWindow = this._infoWindows.get(infoWindow);\n            if (iWindow == null) {\n                // info window already deleted\n                return Promise.resolve();\n            }\n            return iWindow.then(function (i) {\n                return _this._zone.run(function () {\n                    i.close();\n                    _this._infoWindows.delete(infoWindow);\n                });\n            });\n        };\n        InfoWindowManager.prototype.setPosition = function (infoWindow) {\n            return this._infoWindows.get(infoWindow).then(function (i) {\n                return i.setPosition({\n                    lat: infoWindow.latitude,\n                    lng: infoWindow.longitude\n                });\n            });\n        };\n        InfoWindowManager.prototype.setZIndex = function (infoWindow) {\n            return this._infoWindows.get(infoWindow)\n                .then(function (i) { return i.setZIndex(infoWindow.zIndex); });\n        };\n        InfoWindowManager.prototype.open = function (infoWindow) {\n            var _this = this;\n            return this._infoWindows.get(infoWindow).then(function (w) {\n                if (infoWindow.hostMarker != null) {\n                    return _this._markerManager.getNativeMarker(infoWindow.hostMarker).then(function (marker) {\n                        return _this._mapsWrapper.getNativeMap().then(function (map) { return w.open(map, marker); });\n                    });\n                }\n                return _this._mapsWrapper.getNativeMap().then(function (map) { return w.open(map); });\n            });\n        };\n        InfoWindowManager.prototype.close = function (infoWindow) {\n            return this._infoWindows.get(infoWindow).then(function (w) { return w.close(); });\n        };\n        InfoWindowManager.prototype.setOptions = function (infoWindow, options) {\n            return this._infoWindows.get(infoWindow).then(function (i) { return i.setOptions(options); });\n        };\n        InfoWindowManager.prototype.addInfoWindow = function (infoWindow) {\n            var options = {\n                content: infoWindow.content,\n                maxWidth: infoWindow.maxWidth,\n                zIndex: infoWindow.zIndex,\n                disableAutoPan: infoWindow.disableAutoPan\n            };\n            if (typeof infoWindow.latitude === 'number' && typeof infoWindow.longitude === 'number') {\n                options.position = { lat: infoWindow.latitude, lng: infoWindow.longitude };\n            }\n            var infoWindowPromise = this._mapsWrapper.createInfoWindow(options);\n            this._infoWindows.set(infoWindow, infoWindowPromise);\n        };\n        /**\n         * Creates a Google Maps event listener for the given InfoWindow as an Observable\n         */\n        /**\n            * Creates a Google Maps event listener for the given InfoWindow as an Observable\n            */\n        InfoWindowManager.prototype.createEventObservable = /**\n            * Creates a Google Maps event listener for the given InfoWindow as an Observable\n            */\n        function (eventName, infoWindow) {\n            var _this = this;\n            return new rxjs.Observable(function (observer) {\n                _this._infoWindows.get(infoWindow).then(function (i) {\n                    i.addListener(eventName, function (e) { return _this._zone.run(function () { return observer.next(e); }); });\n                });\n            });\n        };\n        InfoWindowManager.decorators = [\n            { type: core.Injectable },\n        ];\n        /** @nocollapse */\n        InfoWindowManager.ctorParameters = function () { return [\n            { type: GoogleMapsAPIWrapper, },\n            { type: core.NgZone, },\n            { type: MarkerManager, },\n        ]; };\n        return InfoWindowManager;\n    }());\n\n    /**\n     * Class to implement when you what to be able to make it work with the auto fit bounds feature\n     * of AGM.\n     */\n    var /**\n     * Class to implement when you what to be able to make it work with the auto fit bounds feature\n     * of AGM.\n     */\n    FitBoundsAccessor = /** @class */ (function () {\n        function FitBoundsAccessor() {\n        }\n        return FitBoundsAccessor;\n    }());\n\n    var infoWindowId = 0;\n    /**\n     * AgmInfoWindow renders a info window inside a {@link AgmMarker} or standalone.\n     *\n     * ### Example\n     * ```typescript\n     * import { Component } from '@angular/core';\n     *\n     * @Component({\n     *  selector: 'my-map-cmp',\n     *  styles: [`\n     *    .agm-map-container {\n     *      height: 300px;\n     *    }\n     * `],\n     *  template: `\n     *    <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n     *      <agm-marker [latitude]=\"lat\" [longitude]=\"lng\" [label]=\"'M'\">\n     *        <agm-info-window [disableAutoPan]=\"true\">\n     *          Hi, this is the content of the <strong>info window</strong>\n     *        </agm-info-window>\n     *      </agm-marker>\n     *    </agm-map>\n     *  `\n     * })\n     * ```\n     */\n    var AgmInfoWindow = /** @class */ (function () {\n        function AgmInfoWindow(_infoWindowManager, _el) {\n            this._infoWindowManager = _infoWindowManager;\n            this._el = _el;\n            /**\n               * Sets the open state for the InfoWindow. You can also call the open() and close() methods.\n               */\n            this.isOpen = false;\n            /**\n               * Emits an event when the info window is closed.\n               */\n            this.infoWindowClose = new core.EventEmitter();\n            this._infoWindowAddedToManager = false;\n            this._id = (infoWindowId++).toString();\n        }\n        AgmInfoWindow.prototype.ngOnInit = function () {\n            this.content = this._el.nativeElement.querySelector('.agm-info-window-content');\n            this._infoWindowManager.addInfoWindow(this);\n            this._infoWindowAddedToManager = true;\n            this._updateOpenState();\n            this._registerEventListeners();\n        };\n        /** @internal */\n        /** @internal */\n        AgmInfoWindow.prototype.ngOnChanges = /** @internal */\n        function (changes) {\n            if (!this._infoWindowAddedToManager) {\n                return;\n            }\n            if ((changes['latitude'] || changes['longitude']) && typeof this.latitude === 'number' &&\n                typeof this.longitude === 'number') {\n                this._infoWindowManager.setPosition(this);\n            }\n            if (changes['zIndex']) {\n                this._infoWindowManager.setZIndex(this);\n            }\n            if (changes['isOpen']) {\n                this._updateOpenState();\n            }\n            this._setInfoWindowOptions(changes);\n        };\n        AgmInfoWindow.prototype._registerEventListeners = function () {\n            var _this = this;\n            this._infoWindowManager.createEventObservable('closeclick', this).subscribe(function () {\n                _this.isOpen = false;\n                _this.infoWindowClose.emit();\n            });\n        };\n        AgmInfoWindow.prototype._updateOpenState = function () {\n            this.isOpen ? this.open() : this.close();\n        };\n        AgmInfoWindow.prototype._setInfoWindowOptions = function (changes) {\n            var options = {};\n            var optionKeys = Object.keys(changes).filter(function (k) { return AgmInfoWindow._infoWindowOptionsInputs.indexOf(k) !== -1; });\n            optionKeys.forEach(function (k) { options[k] = changes[k].currentValue; });\n            this._infoWindowManager.setOptions(this, options);\n        };\n        /**\n         * Opens the info window.\n         */\n        /**\n           * Opens the info window.\n           */\n        AgmInfoWindow.prototype.open = /**\n           * Opens the info window.\n           */\n        function () { return this._infoWindowManager.open(this); };\n        /**\n         * Closes the info window.\n         */\n        /**\n           * Closes the info window.\n           */\n        AgmInfoWindow.prototype.close = /**\n           * Closes the info window.\n           */\n        function () {\n            var _this = this;\n            return this._infoWindowManager.close(this).then(function () { _this.infoWindowClose.emit(); });\n        };\n        /** @internal */\n        /** @internal */\n        AgmInfoWindow.prototype.id = /** @internal */\n        function () { return this._id; };\n        /** @internal */\n        /** @internal */\n        AgmInfoWindow.prototype.toString = /** @internal */\n        function () { return 'AgmInfoWindow-' + this._id.toString(); };\n        /** @internal */\n        /** @internal */\n        AgmInfoWindow.prototype.ngOnDestroy = /** @internal */\n        function () { this._infoWindowManager.deleteInfoWindow(this); };\n        AgmInfoWindow._infoWindowOptionsInputs = ['disableAutoPan', 'maxWidth'];\n        AgmInfoWindow.decorators = [\n            { type: core.Component, args: [{\n                        selector: 'agm-info-window',\n                        template: \"<div class='agm-info-window-content'>\\n      <ng-content></ng-content>\\n    </div>\\n  \"\n                    },] },\n        ];\n        /** @nocollapse */\n        AgmInfoWindow.ctorParameters = function () { return [\n            { type: InfoWindowManager, },\n            { type: core.ElementRef, },\n        ]; };\n        AgmInfoWindow.propDecorators = {\n            \"latitude\": [{ type: core.Input },],\n            \"longitude\": [{ type: core.Input },],\n            \"disableAutoPan\": [{ type: core.Input },],\n            \"zIndex\": [{ type: core.Input },],\n            \"maxWidth\": [{ type: core.Input },],\n            \"isOpen\": [{ type: core.Input },],\n            \"infoWindowClose\": [{ type: core.Output },],\n        };\n        return AgmInfoWindow;\n    }());\n\n    var markerId = 0;\n    /**\n     * AgmMarker renders a map marker inside a {@link AgmMap}.\n     *\n     * ### Example\n     * ```typescript\n     * import { Component } from '@angular/core';\n     *\n     * @Component({\n     *  selector: 'my-map-cmp',\n     *  styles: [`\n     *    .agm-map-container {\n     *      height: 300px;\n     *    }\n     * `],\n     *  template: `\n     *    <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n     *      <agm-marker [latitude]=\"lat\" [longitude]=\"lng\" [label]=\"'M'\">\n     *      </agm-marker>\n     *    </agm-map>\n     *  `\n     * })\n     * ```\n     */\n    var AgmMarker = /** @class */ (function () {\n        function AgmMarker(_markerManager) {\n            this._markerManager = _markerManager;\n            /**\n               * If true, the marker can be dragged. Default value is false.\n               */\n            // tslint:disable-next-line:no-input-rename\n            this.draggable = false;\n            /**\n               * If true, the marker is visible\n               */\n            this.visible = true;\n            /**\n               * Whether to automatically open the child info window when the marker is clicked.\n               */\n            this.openInfoWindow = true;\n            /**\n               * The marker's opacity between 0.0 and 1.0.\n               */\n            this.opacity = 1;\n            /**\n               * All markers are displayed on the map in order of their zIndex, with higher values displaying in\n               * front of markers with lower values. By default, markers are displayed according to their\n               * vertical position on screen, with lower markers appearing in front of markers further up the\n               * screen.\n               */\n            this.zIndex = 1;\n            /**\n               * If true, the marker can be clicked. Default value is true.\n               */\n            // tslint:disable-next-line:no-input-rename\n            this.clickable = true;\n            /**\n               * This event emitter gets emitted when the user clicks on the marker.\n               */\n            this.markerClick = new core.EventEmitter();\n            /**\n               * This event is fired when the user rightclicks on the marker.\n               */\n            this.markerRightClick = new core.EventEmitter();\n            /**\n               * This event is fired when the user stops dragging the marker.\n               */\n            this.dragEnd = new core.EventEmitter();\n            /**\n               * This event is fired when the user mouses over the marker.\n               */\n            this.mouseOver = new core.EventEmitter();\n            /**\n               * This event is fired when the user mouses outside the marker.\n               */\n            this.mouseOut = new core.EventEmitter();\n            /**\n               * @internal\n               */\n            this.infoWindow = new core.QueryList();\n            this._markerAddedToManger = false;\n            this._observableSubscriptions = [];\n            this._fitBoundsDetails$ = new rxjs.ReplaySubject(1);\n            this._id = (markerId++).toString();\n        }\n        /* @internal */\n        /* @internal */\n        AgmMarker.prototype.ngAfterContentInit = /* @internal */\n        function () {\n            var _this = this;\n            this.handleInfoWindowUpdate();\n            this.infoWindow.changes.subscribe(function () { return _this.handleInfoWindowUpdate(); });\n        };\n        AgmMarker.prototype.handleInfoWindowUpdate = function () {\n            var _this = this;\n            if (this.infoWindow.length > 1) {\n                throw new Error('Expected no more than one info window.');\n            }\n            this.infoWindow.forEach(function (marker) {\n                marker.hostMarker = _this;\n            });\n        };\n        /** @internal */\n        /** @internal */\n        AgmMarker.prototype.ngOnChanges = /** @internal */\n        function (changes) {\n            if (typeof this.latitude === 'string') {\n                this.latitude = Number(this.latitude);\n            }\n            if (typeof this.longitude === 'string') {\n                this.longitude = Number(this.longitude);\n            }\n            if (typeof this.latitude !== 'number' || typeof this.longitude !== 'number') {\n                return;\n            }\n            if (!this._markerAddedToManger) {\n                this._markerManager.addMarker(this);\n                this._updateFitBoundsDetails();\n                this._markerAddedToManger = true;\n                this._addEventListeners();\n                return;\n            }\n            if (changes['latitude'] || changes['longitude']) {\n                this._markerManager.updateMarkerPosition(this);\n                this._updateFitBoundsDetails();\n            }\n            if (changes['title']) {\n                this._markerManager.updateTitle(this);\n            }\n            if (changes['label']) {\n                this._markerManager.updateLabel(this);\n            }\n            if (changes['draggable']) {\n                this._markerManager.updateDraggable(this);\n            }\n            if (changes['iconUrl']) {\n                this._markerManager.updateIcon(this);\n            }\n            if (changes['opacity']) {\n                this._markerManager.updateOpacity(this);\n            }\n            if (changes['visible']) {\n                this._markerManager.updateVisible(this);\n            }\n            if (changes['zIndex']) {\n                this._markerManager.updateZIndex(this);\n            }\n            if (changes['clickable']) {\n                this._markerManager.updateClickable(this);\n            }\n            if (changes['animation']) {\n                this._markerManager.updateAnimation(this);\n            }\n        };\n        /**\n         * @internal\n         */\n        /**\n           * @internal\n           */\n        AgmMarker.prototype.getFitBoundsDetails$ = /**\n           * @internal\n           */\n        function () {\n            return this._fitBoundsDetails$.asObservable();\n        };\n        AgmMarker.prototype._updateFitBoundsDetails = function () {\n            this._fitBoundsDetails$.next({ latLng: { lat: this.latitude, lng: this.longitude } });\n        };\n        AgmMarker.prototype._addEventListeners = function () {\n            var _this = this;\n            var cs = this._markerManager.createEventObservable('click', this).subscribe(function () {\n                if (_this.openInfoWindow) {\n                    _this.infoWindow.forEach(function (infoWindow) { return infoWindow.open(); });\n                }\n                _this.markerClick.emit(_this);\n            });\n            this._observableSubscriptions.push(cs);\n            var rc = this._markerManager.createEventObservable('rightclick', this).subscribe(function () {\n                _this.markerRightClick.emit(null);\n            });\n            this._observableSubscriptions.push(rc);\n            var ds = this._markerManager.createEventObservable('dragend', this)\n                .subscribe(function (e) {\n                _this.dragEnd.emit({ coords: { lat: e.latLng.lat(), lng: e.latLng.lng() } });\n            });\n            this._observableSubscriptions.push(ds);\n            var mover = this._markerManager.createEventObservable('mouseover', this)\n                .subscribe(function (e) {\n                _this.mouseOver.emit({ coords: { lat: e.latLng.lat(), lng: e.latLng.lng() } });\n            });\n            this._observableSubscriptions.push(mover);\n            var mout = this._markerManager.createEventObservable('mouseout', this)\n                .subscribe(function (e) {\n                _this.mouseOut.emit({ coords: { lat: e.latLng.lat(), lng: e.latLng.lng() } });\n            });\n            this._observableSubscriptions.push(mout);\n        };\n        /** @internal */\n        /** @internal */\n        AgmMarker.prototype.id = /** @internal */\n        function () { return this._id; };\n        /** @internal */\n        /** @internal */\n        AgmMarker.prototype.toString = /** @internal */\n        function () { return 'AgmMarker-' + this._id.toString(); };\n        /** @internal */\n        /** @internal */\n        AgmMarker.prototype.ngOnDestroy = /** @internal */\n        function () {\n            this._markerManager.deleteMarker(this);\n            // unsubscribe all registered observable subscriptions\n            this._observableSubscriptions.forEach(function (s) { return s.unsubscribe(); });\n        };\n        AgmMarker.decorators = [\n            { type: core.Directive, args: [{\n                        selector: 'agm-marker',\n                        providers: [\n                            { provide: FitBoundsAccessor, useExisting: core.forwardRef(function () { return AgmMarker; }) }\n                        ],\n                        inputs: [\n                            'latitude', 'longitude', 'title', 'label', 'draggable: markerDraggable', 'iconUrl',\n                            'openInfoWindow', 'opacity', 'visible', 'zIndex', 'animation'\n                        ],\n                        outputs: ['markerClick', 'dragEnd', 'mouseOver', 'mouseOut']\n                    },] },\n        ];\n        /** @nocollapse */\n        AgmMarker.ctorParameters = function () { return [\n            { type: MarkerManager, },\n        ]; };\n        AgmMarker.propDecorators = {\n            \"latitude\": [{ type: core.Input },],\n            \"longitude\": [{ type: core.Input },],\n            \"title\": [{ type: core.Input },],\n            \"label\": [{ type: core.Input },],\n            \"draggable\": [{ type: core.Input, args: ['markerDraggable',] },],\n            \"iconUrl\": [{ type: core.Input },],\n            \"visible\": [{ type: core.Input },],\n            \"openInfoWindow\": [{ type: core.Input },],\n            \"opacity\": [{ type: core.Input },],\n            \"zIndex\": [{ type: core.Input },],\n            \"clickable\": [{ type: core.Input, args: ['markerClickable',] },],\n            \"markerClick\": [{ type: core.Output },],\n            \"markerRightClick\": [{ type: core.Output },],\n            \"dragEnd\": [{ type: core.Output },],\n            \"mouseOver\": [{ type: core.Output },],\n            \"mouseOut\": [{ type: core.Output },],\n            \"infoWindow\": [{ type: core.ContentChildren, args: [AgmInfoWindow,] },],\n        };\n        return AgmMarker;\n    }());\n\n    var WindowRef = /** @class */ (function () {\n        function WindowRef() {\n        }\n        WindowRef.prototype.getNativeWindow = function () { return window; };\n        return WindowRef;\n    }());\n    var DocumentRef = /** @class */ (function () {\n        function DocumentRef() {\n        }\n        DocumentRef.prototype.getNativeDocument = function () { return document; };\n        return DocumentRef;\n    }());\n\n    var __extends = (undefined && undefined.__extends) || (function () {\n        var extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return function (d, b) {\n            extendStatics(d, b);\n            function __() { this.constructor = d; }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n    })();\n    var GoogleMapsScriptProtocol;\n    (function (GoogleMapsScriptProtocol) {\n        GoogleMapsScriptProtocol[GoogleMapsScriptProtocol[\"HTTP\"] = 1] = \"HTTP\";\n        GoogleMapsScriptProtocol[GoogleMapsScriptProtocol[\"HTTPS\"] = 2] = \"HTTPS\";\n        GoogleMapsScriptProtocol[GoogleMapsScriptProtocol[\"AUTO\"] = 3] = \"AUTO\";\n    })(GoogleMapsScriptProtocol || (GoogleMapsScriptProtocol = {}));\n    /**\n     * Token for the config of the LazyMapsAPILoader. Please provide an object of type {@link\n     * LazyMapsAPILoaderConfig}.\n     */\n    var LAZY_MAPS_API_CONFIG = new core.InjectionToken('angular-google-maps LAZY_MAPS_API_CONFIG');\n    var LazyMapsAPILoader = /** @class */ (function (_super) {\n        __extends(LazyMapsAPILoader, _super);\n        function LazyMapsAPILoader(config, w, d) {\n            if (config === void 0) { config = null; }\n            var _this = _super.call(this) || this;\n            _this._SCRIPT_ID = 'agmGoogleMapsApiScript';\n            _this.callbackName = \"agmLazyMapsAPILoader\";\n            _this._config = config || {};\n            _this._windowRef = w;\n            _this._documentRef = d;\n            return _this;\n        }\n        LazyMapsAPILoader.prototype.load = function () {\n            var window = this._windowRef.getNativeWindow();\n            if (window.google && window.google.maps) {\n                // Google maps already loaded on the page.\n                return Promise.resolve();\n            }\n            if (this._scriptLoadingPromise) {\n                return this._scriptLoadingPromise;\n            }\n            // this can happen in HMR situations or Stackblitz.io editors.\n            var scriptOnPage = this._documentRef.getNativeDocument().getElementById(this._SCRIPT_ID);\n            if (scriptOnPage) {\n                this._assignScriptLoadingPromise(scriptOnPage);\n                return this._scriptLoadingPromise;\n            }\n            var script = this._documentRef.getNativeDocument().createElement('script');\n            script.type = 'text/javascript';\n            script.async = true;\n            script.defer = true;\n            script.id = this._SCRIPT_ID;\n            script.src = this._getScriptSrc(this.callbackName);\n            this._assignScriptLoadingPromise(script);\n            this._documentRef.getNativeDocument().body.appendChild(script);\n            return this._scriptLoadingPromise;\n        };\n        LazyMapsAPILoader.prototype._assignScriptLoadingPromise = function (scriptElem) {\n            var _this = this;\n            this._scriptLoadingPromise = new Promise(function (resolve, reject) {\n                _this._windowRef.getNativeWindow()[_this.callbackName] = function () {\n                    resolve();\n                };\n                scriptElem.onerror = function (error) {\n                    reject(error);\n                };\n            });\n        };\n        LazyMapsAPILoader.prototype._getScriptSrc = function (callbackName) {\n            var protocolType = (this._config && this._config.protocol) || GoogleMapsScriptProtocol.HTTPS;\n            var protocol;\n            switch (protocolType) {\n                case GoogleMapsScriptProtocol.AUTO:\n                    protocol = '';\n                    break;\n                case GoogleMapsScriptProtocol.HTTP:\n                    protocol = 'http:';\n                    break;\n                case GoogleMapsScriptProtocol.HTTPS:\n                    protocol = 'https:';\n                    break;\n            }\n            var hostAndPath = this._config.hostAndPath || 'maps.googleapis.com/maps/api/js';\n            var queryParams = {\n                v: this._config.apiVersion || '3',\n                callback: callbackName,\n                key: this._config.apiKey,\n                client: this._config.clientId,\n                channel: this._config.channel,\n                libraries: this._config.libraries,\n                region: this._config.region,\n                language: this._config.language\n            };\n            var params = Object.keys(queryParams)\n                .filter(function (k) { return queryParams[k] != null; })\n                .filter(function (k) {\n                // remove empty arrays\n                return !Array.isArray(queryParams[k]) ||\n                    (Array.isArray(queryParams[k]) && queryParams[k].length > 0);\n            })\n                .map(function (k) {\n                // join arrays as comma seperated strings\n                var i = queryParams[k];\n                if (Array.isArray(i)) {\n                    return { key: k, value: i.join(',') };\n                }\n                return { key: k, value: queryParams[k] };\n            })\n                .map(function (entry) {\n                return entry.key + \"=\" + entry.value;\n            })\n                .join('&');\n            return protocol + \"//\" + hostAndPath + \"?\" + params;\n        };\n        LazyMapsAPILoader.decorators = [\n            { type: core.Injectable },\n        ];\n        /** @nocollapse */\n        LazyMapsAPILoader.ctorParameters = function () { return [\n            { type: undefined, decorators: [{ type: core.Optional }, { type: core.Inject, args: [LAZY_MAPS_API_CONFIG,] },] },\n            { type: WindowRef, },\n            { type: DocumentRef, },\n        ]; };\n        return LazyMapsAPILoader;\n    }(MapsAPILoader));\n\n    /**\n     * When using the NoOpMapsAPILoader, the Google Maps API must be added to the page via a `<script>`\n     * Tag.\n     * It's important that the Google Maps API script gets loaded first on the page.\n     */\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\n    function __extends$1(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\n\n    /**\n     * @license Angular v6.0.0\n     * (c) 2010-2018 Google, Inc. https://angular.io/\n     * License: MIT\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Transforms an `HttpRequest` into a stream of `HttpEvent`s, one of which will likely be a\n     * `HttpResponse`.\n     *\n     * `HttpHandler` is injectable. When injected, the handler instance dispatches requests to the\n     * first interceptor in the chain, which dispatches to the second, etc, eventually reaching the\n     * `HttpBackend`.\n     *\n     * In an `HttpInterceptor`, the `HttpHandler` parameter is the next interceptor in the chain.\n     *\n     *\n     */\n    var HttpHandler = /** @class */ (function () {\n        function HttpHandler() {\n        }\n        return HttpHandler;\n    }());\n    /**\n     * A final `HttpHandler` which will dispatch the request via browser HTTP APIs to a backend.\n     *\n     * Interceptors sit between the `HttpClient` interface and the `HttpBackend`.\n     *\n     * When injected, `HttpBackend` dispatches requests directly to the backend, without going\n     * through the interceptor chain.\n     *\n     *\n     */\n    var HttpBackend = /** @class */ (function () {\n        function HttpBackend() {\n        }\n        return HttpBackend;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Immutable set of Http headers, with lazy parsing.\n     *\n     */\n    var HttpHeaders = /** @class */ (function () {\n        function HttpHeaders(headers) {\n            var _this = this;\n            /**\n               * Internal map of lowercased header names to the normalized\n               * form of the name (the form seen first).\n               */\n            this.normalizedNames = new Map();\n            /**\n               * Queued updates to be materialized the next initialization.\n               */\n            this.lazyUpdate = null;\n            if (!headers) {\n                this.headers = new Map();\n            }\n            else if (typeof headers === 'string') {\n                this.lazyInit = function () {\n                    _this.headers = new Map();\n                    headers.split('\\n').forEach(function (line) {\n                        var index = line.indexOf(':');\n                        if (index > 0) {\n                            var name_1 = line.slice(0, index);\n                            var key = name_1.toLowerCase();\n                            var value = line.slice(index + 1).trim();\n                            _this.maybeSetNormalizedName(name_1, key);\n                            if (_this.headers.has(key)) {\n                                _this.headers.get(key).push(value);\n                            }\n                            else {\n                                _this.headers.set(key, [value]);\n                            }\n                        }\n                    });\n                };\n            }\n            else {\n                this.lazyInit = function () {\n                    _this.headers = new Map();\n                    Object.keys(headers).forEach(function (name) {\n                        var values = headers[name];\n                        var key = name.toLowerCase();\n                        if (typeof values === 'string') {\n                            values = [values];\n                        }\n                        if (values.length > 0) {\n                            _this.headers.set(key, values);\n                            _this.maybeSetNormalizedName(name, key);\n                        }\n                    });\n                };\n            }\n        }\n        /**\n         * Checks for existence of header by given name.\n         */\n        /**\n           * Checks for existence of header by given name.\n           */\n        HttpHeaders.prototype.has = /**\n           * Checks for existence of header by given name.\n           */\n        function (name) {\n            this.init();\n            return this.headers.has(name.toLowerCase());\n        };\n        /**\n         * Returns first header that matches given name.\n         */\n        /**\n           * Returns first header that matches given name.\n           */\n        HttpHeaders.prototype.get = /**\n           * Returns first header that matches given name.\n           */\n        function (name) {\n            this.init();\n            var values = this.headers.get(name.toLowerCase());\n            return values && values.length > 0 ? values[0] : null;\n        };\n        /**\n         * Returns the names of the headers\n         */\n        /**\n           * Returns the names of the headers\n           */\n        HttpHeaders.prototype.keys = /**\n           * Returns the names of the headers\n           */\n        function () {\n            this.init();\n            return Array.from(this.normalizedNames.values());\n        };\n        /**\n         * Returns list of header values for a given name.\n         */\n        /**\n           * Returns list of header values for a given name.\n           */\n        HttpHeaders.prototype.getAll = /**\n           * Returns list of header values for a given name.\n           */\n        function (name) {\n            this.init();\n            return this.headers.get(name.toLowerCase()) || null;\n        };\n        HttpHeaders.prototype.append = function (name, value) {\n            return this.clone({ name: name, value: value, op: 'a' });\n        };\n        HttpHeaders.prototype.set = function (name, value) {\n            return this.clone({ name: name, value: value, op: 's' });\n        };\n        HttpHeaders.prototype.delete = function (name, value) {\n            return this.clone({ name: name, value: value, op: 'd' });\n        };\n        HttpHeaders.prototype.maybeSetNormalizedName = function (name, lcName) {\n            if (!this.normalizedNames.has(lcName)) {\n                this.normalizedNames.set(lcName, name);\n            }\n        };\n        HttpHeaders.prototype.init = function () {\n            var _this = this;\n            if (!!this.lazyInit) {\n                if (this.lazyInit instanceof HttpHeaders) {\n                    this.copyFrom(this.lazyInit);\n                }\n                else {\n                    this.lazyInit();\n                }\n                this.lazyInit = null;\n                if (!!this.lazyUpdate) {\n                    this.lazyUpdate.forEach(function (update) { return _this.applyUpdate(update); });\n                    this.lazyUpdate = null;\n                }\n            }\n        };\n        HttpHeaders.prototype.copyFrom = function (other) {\n            var _this = this;\n            other.init();\n            Array.from(other.headers.keys()).forEach(function (key) {\n                _this.headers.set(key, (other.headers.get(key)));\n                _this.normalizedNames.set(key, (other.normalizedNames.get(key)));\n            });\n        };\n        HttpHeaders.prototype.clone = function (update) {\n            var clone = new HttpHeaders();\n            clone.lazyInit =\n                (!!this.lazyInit && this.lazyInit instanceof HttpHeaders) ? this.lazyInit : this;\n            clone.lazyUpdate = (this.lazyUpdate || []).concat([update]);\n            return clone;\n        };\n        HttpHeaders.prototype.applyUpdate = function (update) {\n            var key = update.name.toLowerCase();\n            switch (update.op) {\n                case 'a':\n                case 's':\n                    var value = (update.value);\n                    if (typeof value === 'string') {\n                        value = [value];\n                    }\n                    if (value.length === 0) {\n                        return;\n                    }\n                    this.maybeSetNormalizedName(update.name, key);\n                    var base = (update.op === 'a' ? this.headers.get(key) : undefined) || [];\n                    base.push.apply(base, __spread(value));\n                    this.headers.set(key, base);\n                    break;\n                case 'd':\n                    var toDelete_1 = update.value;\n                    if (!toDelete_1) {\n                        this.headers.delete(key);\n                        this.normalizedNames.delete(key);\n                    }\n                    else {\n                        var existing = this.headers.get(key);\n                        if (!existing) {\n                            return;\n                        }\n                        existing = existing.filter(function (value) { return toDelete_1.indexOf(value) === -1; });\n                        if (existing.length === 0) {\n                            this.headers.delete(key);\n                            this.normalizedNames.delete(key);\n                        }\n                        else {\n                            this.headers.set(key, existing);\n                        }\n                    }\n                    break;\n            }\n        };\n        /**\n         * @internal\n         */\n        /**\n           * @internal\n           */\n        HttpHeaders.prototype.forEach = /**\n           * @internal\n           */\n        function (fn) {\n            var _this = this;\n            this.init();\n            Array.from(this.normalizedNames.keys())\n                .forEach(function (key) { return fn((_this.normalizedNames.get(key)), (_this.headers.get(key))); });\n        };\n        return HttpHeaders;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A `HttpParameterCodec` that uses `encodeURIComponent` and `decodeURIComponent` to\n     * serialize and parse URL parameter keys and values.\n     *\n     *\n     */\n    var HttpUrlEncodingCodec = /** @class */ (function () {\n        function HttpUrlEncodingCodec() {\n        }\n        HttpUrlEncodingCodec.prototype.encodeKey = function (k) { return standardEncoding(k); };\n        HttpUrlEncodingCodec.prototype.encodeValue = function (v) { return standardEncoding(v); };\n        HttpUrlEncodingCodec.prototype.decodeKey = function (k) { return decodeURIComponent(k); };\n        HttpUrlEncodingCodec.prototype.decodeValue = function (v) { return decodeURIComponent(v); };\n        return HttpUrlEncodingCodec;\n    }());\n    function paramParser(rawParams, codec) {\n        var map$$1 = new Map();\n        if (rawParams.length > 0) {\n            var params = rawParams.split('&');\n            params.forEach(function (param) {\n                var eqIdx = param.indexOf('=');\n                var _a = __read(eqIdx == -1 ?\n                    [codec.decodeKey(param), ''] :\n                    [codec.decodeKey(param.slice(0, eqIdx)), codec.decodeValue(param.slice(eqIdx + 1))], 2), key = _a[0], val = _a[1];\n                var list = map$$1.get(key) || [];\n                list.push(val);\n                map$$1.set(key, list);\n            });\n        }\n        return map$$1;\n    }\n    function standardEncoding(v) {\n        return encodeURIComponent(v)\n            .replace(/%40/gi, '@')\n            .replace(/%3A/gi, ':')\n            .replace(/%24/gi, '$')\n            .replace(/%2C/gi, ',')\n            .replace(/%3B/gi, ';')\n            .replace(/%2B/gi, '+')\n            .replace(/%3D/gi, '=')\n            .replace(/%3F/gi, '?')\n            .replace(/%2F/gi, '/');\n    }\n    /**\n     * An HTTP request/response body that represents serialized parameters,\n     * per the MIME type `application/x-www-form-urlencoded`.\n     *\n     * This class is immutable - all mutation operations return a new instance.\n     *\n     *\n     */\n    var HttpParams = /** @class */ (function () {\n        function HttpParams(options) {\n            if (options === void 0) { options = {}; }\n            var _this = this;\n            this.updates = null;\n            this.cloneFrom = null;\n            this.encoder = options.encoder || new HttpUrlEncodingCodec();\n            if (!!options.fromString) {\n                if (!!options.fromObject) {\n                    throw new Error(\"Cannot specify both fromString and fromObject.\");\n                }\n                this.map = paramParser(options.fromString, this.encoder);\n            }\n            else if (!!options.fromObject) {\n                this.map = new Map();\n                Object.keys(options.fromObject).forEach(function (key) {\n                    var value = options.fromObject[key];\n                    _this.map.set(key, Array.isArray(value) ? value : [value]);\n                });\n            }\n            else {\n                this.map = null;\n            }\n        }\n        /**\n         * Check whether the body has one or more values for the given parameter name.\n         */\n        /**\n           * Check whether the body has one or more values for the given parameter name.\n           */\n        HttpParams.prototype.has = /**\n           * Check whether the body has one or more values for the given parameter name.\n           */\n        function (param) {\n            this.init();\n            return this.map.has(param);\n        };\n        /**\n         * Get the first value for the given parameter name, or `null` if it's not present.\n         */\n        /**\n           * Get the first value for the given parameter name, or `null` if it's not present.\n           */\n        HttpParams.prototype.get = /**\n           * Get the first value for the given parameter name, or `null` if it's not present.\n           */\n        function (param) {\n            this.init();\n            var res = this.map.get(param);\n            return !!res ? res[0] : null;\n        };\n        /**\n         * Get all values for the given parameter name, or `null` if it's not present.\n         */\n        /**\n           * Get all values for the given parameter name, or `null` if it's not present.\n           */\n        HttpParams.prototype.getAll = /**\n           * Get all values for the given parameter name, or `null` if it's not present.\n           */\n        function (param) {\n            this.init();\n            return this.map.get(param) || null;\n        };\n        /**\n         * Get all the parameter names for this body.\n         */\n        /**\n           * Get all the parameter names for this body.\n           */\n        HttpParams.prototype.keys = /**\n           * Get all the parameter names for this body.\n           */\n        function () {\n            this.init();\n            return Array.from(this.map.keys());\n        };\n        /**\n         * Construct a new body with an appended value for the given parameter name.\n         */\n        /**\n           * Construct a new body with an appended value for the given parameter name.\n           */\n        HttpParams.prototype.append = /**\n           * Construct a new body with an appended value for the given parameter name.\n           */\n        function (param, value) { return this.clone({ param: param, value: value, op: 'a' }); };\n        /**\n         * Construct a new body with a new value for the given parameter name.\n         */\n        /**\n           * Construct a new body with a new value for the given parameter name.\n           */\n        HttpParams.prototype.set = /**\n           * Construct a new body with a new value for the given parameter name.\n           */\n        function (param, value) { return this.clone({ param: param, value: value, op: 's' }); };\n        /**\n         * Construct a new body with either the given value for the given parameter\n         * removed, if a value is given, or all values for the given parameter removed\n         * if not.\n         */\n        /**\n           * Construct a new body with either the given value for the given parameter\n           * removed, if a value is given, or all values for the given parameter removed\n           * if not.\n           */\n        HttpParams.prototype.delete = /**\n           * Construct a new body with either the given value for the given parameter\n           * removed, if a value is given, or all values for the given parameter removed\n           * if not.\n           */\n        function (param, value) { return this.clone({ param: param, value: value, op: 'd' }); };\n        /**\n         * Serialize the body to an encoded string, where key-value pairs (separated by `=`) are\n         * separated by `&`s.\n         */\n        /**\n           * Serialize the body to an encoded string, where key-value pairs (separated by `=`) are\n           * separated by `&`s.\n           */\n        HttpParams.prototype.toString = /**\n           * Serialize the body to an encoded string, where key-value pairs (separated by `=`) are\n           * separated by `&`s.\n           */\n        function () {\n            var _this = this;\n            this.init();\n            return this.keys()\n                .map(function (key) {\n                var eKey = _this.encoder.encodeKey(key);\n                return _this.map.get(key).map(function (value) { return eKey + '=' + _this.encoder.encodeValue(value); })\n                    .join('&');\n            })\n                .join('&');\n        };\n        HttpParams.prototype.clone = function (update) {\n            var clone = new HttpParams({ encoder: this.encoder });\n            clone.cloneFrom = this.cloneFrom || this;\n            clone.updates = (this.updates || []).concat([update]);\n            return clone;\n        };\n        HttpParams.prototype.init = function () {\n            var _this = this;\n            if (this.map === null) {\n                this.map = new Map();\n            }\n            if (this.cloneFrom !== null) {\n                this.cloneFrom.init();\n                this.cloneFrom.keys().forEach(function (key) { return _this.map.set(key, (_this.cloneFrom.map.get(key))); });\n                this.updates.forEach(function (update) {\n                    switch (update.op) {\n                        case 'a':\n                        case 's':\n                            var base = (update.op === 'a' ? _this.map.get(update.param) : undefined) || [];\n                            base.push((update.value));\n                            _this.map.set(update.param, base);\n                            break;\n                        case 'd':\n                            if (update.value !== undefined) {\n                                var base_1 = _this.map.get(update.param) || [];\n                                var idx = base_1.indexOf(update.value);\n                                if (idx !== -1) {\n                                    base_1.splice(idx, 1);\n                                }\n                                if (base_1.length > 0) {\n                                    _this.map.set(update.param, base_1);\n                                }\n                                else {\n                                    _this.map.delete(update.param);\n                                }\n                            }\n                            else {\n                                _this.map.delete(update.param);\n                                break;\n                            }\n                    }\n                });\n                this.cloneFrom = null;\n            }\n        };\n        return HttpParams;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determine whether the given HTTP method may include a body.\n     */\n    function mightHaveBody(method) {\n        switch (method) {\n            case 'DELETE':\n            case 'GET':\n            case 'HEAD':\n            case 'OPTIONS':\n            case 'JSONP':\n                return false;\n            default:\n                return true;\n        }\n    }\n    /**\n     * Safely assert whether the given value is an ArrayBuffer.\n     *\n     * In some execution environments ArrayBuffer is not defined.\n     */\n    function isArrayBuffer(value) {\n        return typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer;\n    }\n    /**\n     * Safely assert whether the given value is a Blob.\n     *\n     * In some execution environments Blob is not defined.\n     */\n    function isBlob(value) {\n        return typeof Blob !== 'undefined' && value instanceof Blob;\n    }\n    /**\n     * Safely assert whether the given value is a FormData instance.\n     *\n     * In some execution environments FormData is not defined.\n     */\n    function isFormData(value) {\n        return typeof FormData !== 'undefined' && value instanceof FormData;\n    }\n    /**\n     * An outgoing HTTP request with an optional typed body.\n     *\n     * `HttpRequest` represents an outgoing request, including URL, method,\n     * headers, body, and other request configuration options. Instances should be\n     * assumed to be immutable. To modify a `HttpRequest`, the `clone`\n     * method should be used.\n     *\n     *\n     */\n    var HttpRequest = /** @class */ (function () {\n        function HttpRequest(method, url, third, fourth) {\n            this.url = url;\n            /**\n               * The request body, or `null` if one isn't set.\n               *\n               * Bodies are not enforced to be immutable, as they can include a reference to any\n               * user-defined data type. However, interceptors should take care to preserve\n               * idempotence by treating them as such.\n               */\n            this.body = null;\n            /**\n               * Whether this request should be made in a way that exposes progress events.\n               *\n               * Progress events are expensive (change detection runs on each event) and so\n               * they should only be requested if the consumer intends to monitor them.\n               */\n            this.reportProgress = false;\n            /**\n               * Whether this request should be sent with outgoing credentials (cookies).\n               */\n            this.withCredentials = false;\n            /**\n               * The expected response type of the server.\n               *\n               * This is used to parse the response appropriately before returning it to\n               * the requestee.\n               */\n            this.responseType = 'json';\n            this.method = method.toUpperCase();\n            // Next, need to figure out which argument holds the HttpRequestInit\n            // options, if any.\n            var options;\n            // Check whether a body argument is expected. The only valid way to omit\n            // the body argument is to use a known no-body method like GET.\n            if (mightHaveBody(this.method) || !!fourth) {\n                // Body is the third argument, options are the fourth.\n                this.body = (third !== undefined) ? third : null;\n                options = fourth;\n            }\n            else {\n                // No body required, options are the third argument. The body stays null.\n                options = third;\n            }\n            // If options have been passed, interpret them.\n            if (options) {\n                // Normalize reportProgress and withCredentials.\n                this.reportProgress = !!options.reportProgress;\n                this.withCredentials = !!options.withCredentials;\n                // Override default response type of 'json' if one is provided.\n                if (!!options.responseType) {\n                    this.responseType = options.responseType;\n                }\n                // Override headers if they're provided.\n                if (!!options.headers) {\n                    this.headers = options.headers;\n                }\n                if (!!options.params) {\n                    this.params = options.params;\n                }\n            }\n            // If no headers have been passed in, construct a new HttpHeaders instance.\n            if (!this.headers) {\n                this.headers = new HttpHeaders();\n            }\n            // If no parameters have been passed in, construct a new HttpUrlEncodedParams instance.\n            if (!this.params) {\n                this.params = new HttpParams();\n                this.urlWithParams = url;\n            }\n            else {\n                // Encode the parameters to a string in preparation for inclusion in the URL.\n                var params = this.params.toString();\n                if (params.length === 0) {\n                    // No parameters, the visible URL is just the URL given at creation time.\n                    this.urlWithParams = url;\n                }\n                else {\n                    // Does the URL already have query parameters? Look for '?'.\n                    var qIdx = url.indexOf('?');\n                    // There are 3 cases to handle:\n                    // 1) No existing parameters -> append '?' followed by params.\n                    // 2) '?' exists and is followed by existing query string ->\n                    //    append '&' followed by params.\n                    // 3) '?' exists at the end of the url -> append params directly.\n                    // This basically amounts to determining the character, if any, with\n                    // which to join the URL and parameters.\n                    var sep = qIdx === -1 ? '?' : (qIdx < url.length - 1 ? '&' : '');\n                    this.urlWithParams = url + sep + params;\n                }\n            }\n        }\n        /**\n         * Transform the free-form body into a serialized format suitable for\n         * transmission to the server.\n         */\n        /**\n           * Transform the free-form body into a serialized format suitable for\n           * transmission to the server.\n           */\n        HttpRequest.prototype.serializeBody = /**\n           * Transform the free-form body into a serialized format suitable for\n           * transmission to the server.\n           */\n        function () {\n            // If no body is present, no need to serialize it.\n            if (this.body === null) {\n                return null;\n            }\n            // Check whether the body is already in a serialized form. If so,\n            // it can just be returned directly.\n            if (isArrayBuffer(this.body) || isBlob(this.body) || isFormData(this.body) ||\n                typeof this.body === 'string') {\n                return this.body;\n            }\n            // Check whether the body is an instance of HttpUrlEncodedParams.\n            if (this.body instanceof HttpParams) {\n                return this.body.toString();\n            }\n            // Check whether the body is an object or array, and serialize with JSON if so.\n            if (typeof this.body === 'object' || typeof this.body === 'boolean' ||\n                Array.isArray(this.body)) {\n                return JSON.stringify(this.body);\n            }\n            // Fall back on toString() for everything else.\n            return this.body.toString();\n        };\n        /**\n         * Examine the body and attempt to infer an appropriate MIME type\n         * for it.\n         *\n         * If no such type can be inferred, this method will return `null`.\n         */\n        /**\n           * Examine the body and attempt to infer an appropriate MIME type\n           * for it.\n           *\n           * If no such type can be inferred, this method will return `null`.\n           */\n        HttpRequest.prototype.detectContentTypeHeader = /**\n           * Examine the body and attempt to infer an appropriate MIME type\n           * for it.\n           *\n           * If no such type can be inferred, this method will return `null`.\n           */\n        function () {\n            // An empty body has no content type.\n            if (this.body === null) {\n                return null;\n            }\n            // FormData bodies rely on the browser's content type assignment.\n            if (isFormData(this.body)) {\n                return null;\n            }\n            // Blobs usually have their own content type. If it doesn't, then\n            // no type can be inferred.\n            if (isBlob(this.body)) {\n                return this.body.type || null;\n            }\n            // Array buffers have unknown contents and thus no type can be inferred.\n            if (isArrayBuffer(this.body)) {\n                return null;\n            }\n            // Technically, strings could be a form of JSON data, but it's safe enough\n            // to assume they're plain strings.\n            if (typeof this.body === 'string') {\n                return 'text/plain';\n            }\n            // `HttpUrlEncodedParams` has its own content-type.\n            if (this.body instanceof HttpParams) {\n                return 'application/x-www-form-urlencoded;charset=UTF-8';\n            }\n            // Arrays, objects, and numbers will be encoded as JSON.\n            if (typeof this.body === 'object' || typeof this.body === 'number' ||\n                Array.isArray(this.body)) {\n                return 'application/json';\n            }\n            // No type could be inferred.\n            return null;\n        };\n        HttpRequest.prototype.clone = function (update) {\n            if (update === void 0) { update = {}; }\n            // For method, url, and responseType, take the current value unless\n            // it is overridden in the update hash.\n            var method = update.method || this.method;\n            var url = update.url || this.url;\n            var responseType = update.responseType || this.responseType;\n            // The body is somewhat special - a `null` value in update.body means\n            // whatever current body is present is being overridden with an empty\n            // body, whereas an `undefined` value in update.body implies no\n            // override.\n            var body = (update.body !== undefined) ? update.body : this.body;\n            // Carefully handle the boolean options to differentiate between\n            // `false` and `undefined` in the update args.\n            var withCredentials = (update.withCredentials !== undefined) ? update.withCredentials : this.withCredentials;\n            var reportProgress = (update.reportProgress !== undefined) ? update.reportProgress : this.reportProgress;\n            // Headers and params may be appended to if `setHeaders` or\n            // `setParams` are used.\n            var headers = update.headers || this.headers;\n            var params = update.params || this.params;\n            // Check whether the caller has asked to add headers.\n            if (update.setHeaders !== undefined) {\n                // Set every requested header.\n                headers =\n                    Object.keys(update.setHeaders)\n                        .reduce(function (headers, name) { return headers.set(name, update.setHeaders[name]); }, headers);\n            }\n            // Check whether the caller has asked to set params.\n            if (update.setParams) {\n                // Set every requested param.\n                params = Object.keys(update.setParams)\n                    .reduce(function (params, param) { return params.set(param, update.setParams[param]); }, params);\n            }\n            // Finally, construct the new HttpRequest using the pieces from above.\n            return new HttpRequest(method, url, body, {\n                params: params, headers: headers, reportProgress: reportProgress, responseType: responseType, withCredentials: withCredentials,\n            });\n        };\n        return HttpRequest;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Type enumeration for the different kinds of `HttpEvent`.\n     *\n     *\n     */\n    /**\n     * Type enumeration for the different kinds of `HttpEvent`.\n     *\n     *\n     */\n    var HttpEventType;\n    /**\n     * Type enumeration for the different kinds of `HttpEvent`.\n     *\n     *\n     */\n    (function (HttpEventType) {\n        /**\n         * The request was sent out over the wire.\n         */\n        HttpEventType[HttpEventType[\"Sent\"] = 0] = \"Sent\";\n        /**\n         * An upload progress event was received.\n         */\n        HttpEventType[HttpEventType[\"UploadProgress\"] = 1] = \"UploadProgress\";\n        /**\n         * The response status code and headers were received.\n         */\n        HttpEventType[HttpEventType[\"ResponseHeader\"] = 2] = \"ResponseHeader\";\n        /**\n         * A download progress event was received.\n         */\n        HttpEventType[HttpEventType[\"DownloadProgress\"] = 3] = \"DownloadProgress\";\n        /**\n         * The full response including the body was received.\n         */\n        HttpEventType[HttpEventType[\"Response\"] = 4] = \"Response\";\n        /**\n         * A custom event from an interceptor or a backend.\n         */\n        HttpEventType[HttpEventType[\"User\"] = 5] = \"User\";\n    })(HttpEventType || (HttpEventType = {}));\n    /**\n     * Base class for both `HttpResponse` and `HttpHeaderResponse`.\n     *\n     *\n     */\n    var HttpResponseBase = /** @class */ (function () {\n        /**\n         * Super-constructor for all responses.\n         *\n         * The single parameter accepted is an initialization hash. Any properties\n         * of the response passed there will override the default values.\n         */\n        function HttpResponseBase(init, defaultStatus, defaultStatusText) {\n            if (defaultStatus === void 0) { defaultStatus = 200; }\n            if (defaultStatusText === void 0) { defaultStatusText = 'OK'; }\n            // If the hash has values passed, use them to initialize the response.\n            // Otherwise use the default values.\n            this.headers = init.headers || new HttpHeaders();\n            this.status = init.status !== undefined ? init.status : defaultStatus;\n            this.statusText = init.statusText || defaultStatusText;\n            this.url = init.url || null;\n            // Cache the ok value to avoid defining a getter.\n            this.ok = this.status >= 200 && this.status < 300;\n        }\n        return HttpResponseBase;\n    }());\n    /**\n     * A partial HTTP response which only includes the status and header data,\n     * but no response body.\n     *\n     * `HttpHeaderResponse` is a `HttpEvent` available on the response\n     * event stream, only when progress events are requested.\n     *\n     *\n     */\n    var HttpHeaderResponse = /** @class */ (function (_super) {\n        __extends$1(HttpHeaderResponse, _super);\n        /**\n         * Create a new `HttpHeaderResponse` with the given parameters.\n         */\n        function HttpHeaderResponse(init) {\n            if (init === void 0) { init = {}; }\n            var _this = _super.call(this, init) || this;\n            _this.type = HttpEventType.ResponseHeader;\n            return _this;\n        }\n        /**\n         * Copy this `HttpHeaderResponse`, overriding its contents with the\n         * given parameter hash.\n         */\n        /**\n           * Copy this `HttpHeaderResponse`, overriding its contents with the\n           * given parameter hash.\n           */\n        HttpHeaderResponse.prototype.clone = /**\n           * Copy this `HttpHeaderResponse`, overriding its contents with the\n           * given parameter hash.\n           */\n        function (update) {\n            if (update === void 0) { update = {}; }\n            // Perform a straightforward initialization of the new HttpHeaderResponse,\n            // overriding the current parameters with new ones if given.\n            return new HttpHeaderResponse({\n                headers: update.headers || this.headers,\n                status: update.status !== undefined ? update.status : this.status,\n                statusText: update.statusText || this.statusText,\n                url: update.url || this.url || undefined,\n            });\n        };\n        return HttpHeaderResponse;\n    }(HttpResponseBase));\n    /**\n     * A full HTTP response, including a typed response body (which may be `null`\n     * if one was not returned).\n     *\n     * `HttpResponse` is a `HttpEvent` available on the response event\n     * stream.\n     *\n     *\n     */\n    var HttpResponse = /** @class */ (function (_super) {\n        __extends$1(HttpResponse, _super);\n        /**\n         * Construct a new `HttpResponse`.\n         */\n        function HttpResponse(init) {\n            if (init === void 0) { init = {}; }\n            var _this = _super.call(this, init) || this;\n            _this.type = HttpEventType.Response;\n            _this.body = init.body !== undefined ? init.body : null;\n            return _this;\n        }\n        HttpResponse.prototype.clone = function (update) {\n            if (update === void 0) { update = {}; }\n            return new HttpResponse({\n                body: (update.body !== undefined) ? update.body : this.body,\n                headers: update.headers || this.headers,\n                status: (update.status !== undefined) ? update.status : this.status,\n                statusText: update.statusText || this.statusText,\n                url: update.url || this.url || undefined,\n            });\n        };\n        return HttpResponse;\n    }(HttpResponseBase));\n    /**\n     * A response that represents an error or failure, either from a\n     * non-successful HTTP status, an error while executing the request,\n     * or some other failure which occurred during the parsing of the response.\n     *\n     * Any error returned on the `Observable` response stream will be\n     * wrapped in an `HttpErrorResponse` to provide additional context about\n     * the state of the HTTP layer when the error occurred. The error property\n     * will contain either a wrapped Error object or the error response returned\n     * from the server.\n     *\n     *\n     */\n    var HttpErrorResponse = /** @class */ (function (_super) {\n        __extends$1(HttpErrorResponse, _super);\n        function HttpErrorResponse(init) {\n            var _this = \n            // Initialize with a default status of 0 / Unknown Error.\n            _super.call(this, init, 0, 'Unknown Error') || this;\n            _this.name = 'HttpErrorResponse';\n            /**\n               * Errors are never okay, even when the status code is in the 2xx success range.\n               */\n            _this.ok = false;\n            // If the response was successful, then this was a parse error. Otherwise, it was\n            // a protocol-level failure of some sort. Either the request failed in transit\n            // or the server returned an unsuccessful status code.\n            if (_this.status >= 200 && _this.status < 300) {\n                _this.message = \"Http failure during parsing for \" + (init.url || '(unknown url)');\n            }\n            else {\n                _this.message =\n                    \"Http failure response for \" + (init.url || '(unknown url)') + \": \" + init.status + \" \" + init.statusText;\n            }\n            _this.error = init.error || null;\n            return _this;\n        }\n        return HttpErrorResponse;\n    }(HttpResponseBase));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Construct an instance of `HttpRequestOptions<T>` from a source `HttpMethodOptions` and\n     * the given `body`. Basically, this clones the object and adds the body.\n     */\n    function addBody(options, body) {\n        return {\n            body: body,\n            headers: options.headers,\n            observe: options.observe,\n            params: options.params,\n            reportProgress: options.reportProgress,\n            responseType: options.responseType,\n            withCredentials: options.withCredentials,\n        };\n    }\n    /**\n     * Perform HTTP requests.\n     *\n     * `HttpClient` is available as an injectable class, with methods to perform HTTP requests.\n     * Each request method has multiple signatures, and the return type varies according to which\n     * signature is called (mainly the values of `observe` and `responseType`).\n     *\n     *\n     */\n    var HttpClient = /** @class */ (function () {\n        function HttpClient(handler) {\n            this.handler = handler;\n        }\n        /**\n         * Constructs an `Observable` for a particular HTTP request that, when subscribed,\n         * fires the request through the chain of registered interceptors and on to the\n         * server.\n         *\n         * This method can be called in one of two ways. Either an `HttpRequest`\n         * instance can be passed directly as the only parameter, or a method can be\n         * passed as the first parameter, a string URL as the second, and an\n         * options hash as the third.\n         *\n         * If a `HttpRequest` object is passed directly, an `Observable` of the\n         * raw `HttpEvent` stream will be returned.\n         *\n         * If a request is instead built by providing a URL, the options object\n         * determines the return type of `request()`. In addition to configuring\n         * request parameters such as the outgoing headers and/or the body, the options\n         * hash specifies two key pieces of information about the request: the\n         * `responseType` and what to `observe`.\n         *\n         * The `responseType` value determines how a successful response body will be\n         * parsed. If `responseType` is the default `json`, a type interface for the\n         * resulting object may be passed as a type parameter to `request()`.\n         *\n         * The `observe` value determines the return type of `request()`, based on what\n         * the consumer is interested in observing. A value of `events` will return an\n         * `Observable<HttpEvent>` representing the raw `HttpEvent` stream,\n         * including progress events by default. A value of `response` will return an\n         * `Observable<HttpResponse<T>>` where the `T` parameter of `HttpResponse`\n         * depends on the `responseType` and any optionally provided type parameter.\n         * A value of `body` will return an `Observable<T>` with the same `T` body type.\n         */\n        /**\n           * Constructs an `Observable` for a particular HTTP request that, when subscribed,\n           * fires the request through the chain of registered interceptors and on to the\n           * server.\n           *\n           * This method can be called in one of two ways. Either an `HttpRequest`\n           * instance can be passed directly as the only parameter, or a method can be\n           * passed as the first parameter, a string URL as the second, and an\n           * options hash as the third.\n           *\n           * If a `HttpRequest` object is passed directly, an `Observable` of the\n           * raw `HttpEvent` stream will be returned.\n           *\n           * If a request is instead built by providing a URL, the options object\n           * determines the return type of `request()`. In addition to configuring\n           * request parameters such as the outgoing headers and/or the body, the options\n           * hash specifies two key pieces of information about the request: the\n           * `responseType` and what to `observe`.\n           *\n           * The `responseType` value determines how a successful response body will be\n           * parsed. If `responseType` is the default `json`, a type interface for the\n           * resulting object may be passed as a type parameter to `request()`.\n           *\n           * The `observe` value determines the return type of `request()`, based on what\n           * the consumer is interested in observing. A value of `events` will return an\n           * `Observable<HttpEvent>` representing the raw `HttpEvent` stream,\n           * including progress events by default. A value of `response` will return an\n           * `Observable<HttpResponse<T>>` where the `T` parameter of `HttpResponse`\n           * depends on the `responseType` and any optionally provided type parameter.\n           * A value of `body` will return an `Observable<T>` with the same `T` body type.\n           */\n        HttpClient.prototype.request = /**\n           * Constructs an `Observable` for a particular HTTP request that, when subscribed,\n           * fires the request through the chain of registered interceptors and on to the\n           * server.\n           *\n           * This method can be called in one of two ways. Either an `HttpRequest`\n           * instance can be passed directly as the only parameter, or a method can be\n           * passed as the first parameter, a string URL as the second, and an\n           * options hash as the third.\n           *\n           * If a `HttpRequest` object is passed directly, an `Observable` of the\n           * raw `HttpEvent` stream will be returned.\n           *\n           * If a request is instead built by providing a URL, the options object\n           * determines the return type of `request()`. In addition to configuring\n           * request parameters such as the outgoing headers and/or the body, the options\n           * hash specifies two key pieces of information about the request: the\n           * `responseType` and what to `observe`.\n           *\n           * The `responseType` value determines how a successful response body will be\n           * parsed. If `responseType` is the default `json`, a type interface for the\n           * resulting object may be passed as a type parameter to `request()`.\n           *\n           * The `observe` value determines the return type of `request()`, based on what\n           * the consumer is interested in observing. A value of `events` will return an\n           * `Observable<HttpEvent>` representing the raw `HttpEvent` stream,\n           * including progress events by default. A value of `response` will return an\n           * `Observable<HttpResponse<T>>` where the `T` parameter of `HttpResponse`\n           * depends on the `responseType` and any optionally provided type parameter.\n           * A value of `body` will return an `Observable<T>` with the same `T` body type.\n           */\n        function (first, url, options) {\n            var _this = this;\n            if (options === void 0) { options = {}; }\n            var req;\n            // Firstly, check whether the primary argument is an instance of `HttpRequest`.\n            if (first instanceof HttpRequest) {\n                // It is. The other arguments must be undefined (per the signatures) and can be\n                // ignored.\n                req = first;\n            }\n            else {\n                // It's a string, so it represents a URL. Construct a request based on it,\n                // and incorporate the remaining arguments (assuming GET unless a method is\n                // provided.\n                // Figure out the headers.\n                var headers = undefined;\n                if (options.headers instanceof HttpHeaders) {\n                    headers = options.headers;\n                }\n                else {\n                    headers = new HttpHeaders(options.headers);\n                }\n                // Sort out parameters.\n                var params = undefined;\n                if (!!options.params) {\n                    if (options.params instanceof HttpParams) {\n                        params = options.params;\n                    }\n                    else {\n                        params = new HttpParams({ fromObject: options.params });\n                    }\n                }\n                // Construct the request.\n                req = new HttpRequest(first, (url), (options.body !== undefined ? options.body : null), {\n                    headers: headers,\n                    params: params,\n                    reportProgress: options.reportProgress,\n                    // By default, JSON is assumed to be returned for all calls.\n                    responseType: options.responseType || 'json',\n                    withCredentials: options.withCredentials,\n                });\n            }\n            // Start with an Observable.of() the initial request, and run the handler (which\n            // includes all interceptors) inside a concatMap(). This way, the handler runs\n            // inside an Observable chain, which causes interceptors to be re-run on every\n            // subscription (this also makes retries re-run the handler, including interceptors).\n            var events$ = rxjs.of(req).pipe(operators.concatMap(function (req) { return _this.handler.handle(req); }));\n            // If coming via the API signature which accepts a previously constructed HttpRequest,\n            // the only option is to get the event stream. Otherwise, return the event stream if\n            // that is what was requested.\n            if (first instanceof HttpRequest || options.observe === 'events') {\n                return events$;\n            }\n            // The requested stream contains either the full response or the body. In either\n            // case, the first step is to filter the event stream to extract a stream of\n            // responses(s).\n            var res$ = events$.pipe(operators.filter(function (event) { return event instanceof HttpResponse; }));\n            // Decide which stream to return.\n            switch (options.observe || 'body') {\n                case 'body':\n                    // The requested stream is the body. Map the response stream to the response\n                    // body. This could be done more simply, but a misbehaving interceptor might\n                    // transform the response body into a different format and ignore the requested\n                    // responseType. Guard against this by validating that the response is of the\n                    // requested type.\n                    switch (req.responseType) {\n                        case 'arraybuffer':\n                            return res$.pipe(operators.map(function (res) {\n                                // Validate that the body is an ArrayBuffer.\n                                if (res.body !== null && !(res.body instanceof ArrayBuffer)) {\n                                    throw new Error('Response is not an ArrayBuffer.');\n                                }\n                                return res.body;\n                            }));\n                        case 'blob':\n                            return res$.pipe(operators.map(function (res) {\n                                // Validate that the body is a Blob.\n                                if (res.body !== null && !(res.body instanceof Blob)) {\n                                    throw new Error('Response is not a Blob.');\n                                }\n                                return res.body;\n                            }));\n                        case 'text':\n                            return res$.pipe(operators.map(function (res) {\n                                // Validate that the body is a string.\n                                if (res.body !== null && typeof res.body !== 'string') {\n                                    throw new Error('Response is not a string.');\n                                }\n                                return res.body;\n                            }));\n                        case 'json':\n                        default:\n                            // No validation needed for JSON responses, as they can be of any type.\n                            return res$.pipe(operators.map(function (res) { return res.body; }));\n                    }\n                case 'response':\n                    // The response stream was requested directly, so return it.\n                    return res$;\n                default:\n                    // Guard against new future observe types being added.\n                    throw new Error(\"Unreachable: unhandled observe type \" + options.observe + \"}\");\n            }\n        };\n        /**\n         * Constructs an `Observable` which, when subscribed, will cause the configured\n         * DELETE request to be executed on the server. See the individual overloads for\n         * details of `delete()`'s return type based on the provided options.\n         */\n        /**\n           * Constructs an `Observable` which, when subscribed, will cause the configured\n           * DELETE request to be executed on the server. See the individual overloads for\n           * details of `delete()`'s return type based on the provided options.\n           */\n        HttpClient.prototype.delete = /**\n           * Constructs an `Observable` which, when subscribed, will cause the configured\n           * DELETE request to be executed on the server. See the individual overloads for\n           * details of `delete()`'s return type based on the provided options.\n           */\n        function (url, options) {\n            if (options === void 0) { options = {}; }\n            return this.request('DELETE', url, options);\n        };\n        /**\n         * Constructs an `Observable` which, when subscribed, will cause the configured\n         * GET request to be executed on the server. See the individual overloads for\n         * details of `get()`'s return type based on the provided options.\n         */\n        /**\n           * Constructs an `Observable` which, when subscribed, will cause the configured\n           * GET request to be executed on the server. See the individual overloads for\n           * details of `get()`'s return type based on the provided options.\n           */\n        HttpClient.prototype.get = /**\n           * Constructs an `Observable` which, when subscribed, will cause the configured\n           * GET request to be executed on the server. See the individual overloads for\n           * details of `get()`'s return type based on the provided options.\n           */\n        function (url, options) {\n            if (options === void 0) { options = {}; }\n            return this.request('GET', url, options);\n        };\n        /**\n         * Constructs an `Observable` which, when subscribed, will cause the configured\n         * HEAD request to be executed on the server. See the individual overloads for\n         * details of `head()`'s return type based on the provided options.\n         */\n        /**\n           * Constructs an `Observable` which, when subscribed, will cause the configured\n           * HEAD request to be executed on the server. See the individual overloads for\n           * details of `head()`'s return type based on the provided options.\n           */\n        HttpClient.prototype.head = /**\n           * Constructs an `Observable` which, when subscribed, will cause the configured\n           * HEAD request to be executed on the server. See the individual overloads for\n           * details of `head()`'s return type based on the provided options.\n           */\n        function (url, options) {\n            if (options === void 0) { options = {}; }\n            return this.request('HEAD', url, options);\n        };\n        /**\n         * Constructs an `Observable` which, when subscribed, will cause a request\n         * with the special method `JSONP` to be dispatched via the interceptor pipeline.\n         *\n         * A suitable interceptor must be installed (e.g. via the `HttpClientJsonpModule`).\n         * If no such interceptor is reached, then the `JSONP` request will likely be\n         * rejected by the configured backend.\n         */\n        /**\n           * Constructs an `Observable` which, when subscribed, will cause a request\n           * with the special method `JSONP` to be dispatched via the interceptor pipeline.\n           *\n           * A suitable interceptor must be installed (e.g. via the `HttpClientJsonpModule`).\n           * If no such interceptor is reached, then the `JSONP` request will likely be\n           * rejected by the configured backend.\n           */\n        HttpClient.prototype.jsonp = /**\n           * Constructs an `Observable` which, when subscribed, will cause a request\n           * with the special method `JSONP` to be dispatched via the interceptor pipeline.\n           *\n           * A suitable interceptor must be installed (e.g. via the `HttpClientJsonpModule`).\n           * If no such interceptor is reached, then the `JSONP` request will likely be\n           * rejected by the configured backend.\n           */\n        function (url, callbackParam) {\n            return this.request('JSONP', url, {\n                params: new HttpParams().append(callbackParam, 'JSONP_CALLBACK'),\n                observe: 'body',\n                responseType: 'json',\n            });\n        };\n        /**\n         * Constructs an `Observable` which, when subscribed, will cause the configured\n         * OPTIONS request to be executed on the server. See the individual overloads for\n         * details of `options()`'s return type based on the provided options.\n         */\n        /**\n           * Constructs an `Observable` which, when subscribed, will cause the configured\n           * OPTIONS request to be executed on the server. See the individual overloads for\n           * details of `options()`'s return type based on the provided options.\n           */\n        HttpClient.prototype.options = /**\n           * Constructs an `Observable` which, when subscribed, will cause the configured\n           * OPTIONS request to be executed on the server. See the individual overloads for\n           * details of `options()`'s return type based on the provided options.\n           */\n        function (url, options) {\n            if (options === void 0) { options = {}; }\n            return this.request('OPTIONS', url, options);\n        };\n        /**\n         * Constructs an `Observable` which, when subscribed, will cause the configured\n         * PATCH request to be executed on the server. See the individual overloads for\n         * details of `patch()`'s return type based on the provided options.\n         */\n        /**\n           * Constructs an `Observable` which, when subscribed, will cause the configured\n           * PATCH request to be executed on the server. See the individual overloads for\n           * details of `patch()`'s return type based on the provided options.\n           */\n        HttpClient.prototype.patch = /**\n           * Constructs an `Observable` which, when subscribed, will cause the configured\n           * PATCH request to be executed on the server. See the individual overloads for\n           * details of `patch()`'s return type based on the provided options.\n           */\n        function (url, body, options) {\n            if (options === void 0) { options = {}; }\n            return this.request('PATCH', url, addBody(options, body));\n        };\n        /**\n         * Constructs an `Observable` which, when subscribed, will cause the configured\n         * POST request to be executed on the server. See the individual overloads for\n         * details of `post()`'s return type based on the provided options.\n         */\n        /**\n           * Constructs an `Observable` which, when subscribed, will cause the configured\n           * POST request to be executed on the server. See the individual overloads for\n           * details of `post()`'s return type based on the provided options.\n           */\n        HttpClient.prototype.post = /**\n           * Constructs an `Observable` which, when subscribed, will cause the configured\n           * POST request to be executed on the server. See the individual overloads for\n           * details of `post()`'s return type based on the provided options.\n           */\n        function (url, body, options) {\n            if (options === void 0) { options = {}; }\n            return this.request('POST', url, addBody(options, body));\n        };\n        /**\n         * Constructs an `Observable` which, when subscribed, will cause the configured\n         * POST request to be executed on the server. See the individual overloads for\n         * details of `post()`'s return type based on the provided options.\n         */\n        /**\n           * Constructs an `Observable` which, when subscribed, will cause the configured\n           * POST request to be executed on the server. See the individual overloads for\n           * details of `post()`'s return type based on the provided options.\n           */\n        HttpClient.prototype.put = /**\n           * Constructs an `Observable` which, when subscribed, will cause the configured\n           * POST request to be executed on the server. See the individual overloads for\n           * details of `post()`'s return type based on the provided options.\n           */\n        function (url, body, options) {\n            if (options === void 0) { options = {}; }\n            return this.request('PUT', url, addBody(options, body));\n        };\n        HttpClient.decorators = [\n            { type: core.Injectable }\n        ];\n        /** @nocollapse */\n        HttpClient.ctorParameters = function () { return [\n            { type: HttpHandler, },\n        ]; };\n        return HttpClient;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * `HttpHandler` which applies an `HttpInterceptor` to an `HttpRequest`.\n     *\n     *\n     */\n    var HttpInterceptorHandler = /** @class */ (function () {\n        function HttpInterceptorHandler(next, interceptor) {\n            this.next = next;\n            this.interceptor = interceptor;\n        }\n        HttpInterceptorHandler.prototype.handle = function (req) {\n            return this.interceptor.intercept(req, this.next);\n        };\n        return HttpInterceptorHandler;\n    }());\n    /**\n     * A multi-provider token which represents the array of `HttpInterceptor`s that\n     * are registered.\n     *\n     *\n     */\n    var HTTP_INTERCEPTORS = new core.InjectionToken('HTTP_INTERCEPTORS');\n    var NoopInterceptor = /** @class */ (function () {\n        function NoopInterceptor() {\n        }\n        NoopInterceptor.prototype.intercept = function (req, next) {\n            return next.handle(req);\n        };\n        NoopInterceptor.decorators = [\n            { type: core.Injectable }\n        ];\n        /** @nocollapse */\n        NoopInterceptor.ctorParameters = function () { return []; };\n        return NoopInterceptor;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var XSSI_PREFIX = /^\\)\\]\\}',?\\n/;\n    /**\n     * Determine an appropriate URL for the response, by checking either\n     * XMLHttpRequest.responseURL or the X-Request-URL header.\n     */\n    function getResponseUrl(xhr) {\n        if ('responseURL' in xhr && xhr.responseURL) {\n            return xhr.responseURL;\n        }\n        if (/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())) {\n            return xhr.getResponseHeader('X-Request-URL');\n        }\n        return null;\n    }\n    /**\n     * A wrapper around the `XMLHttpRequest` constructor.\n     *\n     *\n     */\n    var XhrFactory = /** @class */ (function () {\n        function XhrFactory() {\n        }\n        return XhrFactory;\n    }());\n    /**\n     * A factory for @{link HttpXhrBackend} that uses the `XMLHttpRequest` browser API.\n     *\n     *\n     */\n    var BrowserXhr = /** @class */ (function () {\n        function BrowserXhr() {\n        }\n        BrowserXhr.prototype.build = function () { return (new XMLHttpRequest()); };\n        BrowserXhr.decorators = [\n            { type: core.Injectable }\n        ];\n        /** @nocollapse */\n        BrowserXhr.ctorParameters = function () { return []; };\n        return BrowserXhr;\n    }());\n    /**\n     * An `HttpBackend` which uses the XMLHttpRequest API to send\n     * requests to a backend server.\n     *\n     *\n     */\n    var HttpXhrBackend = /** @class */ (function () {\n        function HttpXhrBackend(xhrFactory) {\n            this.xhrFactory = xhrFactory;\n        }\n        /**\n         * Process a request and return a stream of response events.\n         */\n        /**\n           * Process a request and return a stream of response events.\n           */\n        HttpXhrBackend.prototype.handle = /**\n           * Process a request and return a stream of response events.\n           */\n        function (req) {\n            var _this = this;\n            // Quick check to give a better error message when a user attempts to use\n            // HttpClient.jsonp() without installing the JsonpClientModule\n            if (req.method === 'JSONP') {\n                throw new Error(\"Attempted to construct Jsonp request without JsonpClientModule installed.\");\n            }\n            // Everything happens on Observable subscription.\n            return new rxjs.Observable(function (observer) {\n                // Start by setting up the XHR object with request method, URL, and withCredentials flag.\n                var xhr = _this.xhrFactory.build();\n                xhr.open(req.method, req.urlWithParams);\n                if (!!req.withCredentials) {\n                    xhr.withCredentials = true;\n                }\n                // Add all the requested headers.\n                req.headers.forEach(function (name, values) { return xhr.setRequestHeader(name, values.join(',')); });\n                // Add an Accept header if one isn't present already.\n                if (!req.headers.has('Accept')) {\n                    xhr.setRequestHeader('Accept', 'application/json, text/plain, */*');\n                }\n                // Auto-detect the Content-Type header if one isn't present already.\n                if (!req.headers.has('Content-Type')) {\n                    var detectedType = req.detectContentTypeHeader();\n                    // Sometimes Content-Type detection fails.\n                    if (detectedType !== null) {\n                        xhr.setRequestHeader('Content-Type', detectedType);\n                    }\n                }\n                // Set the responseType if one was requested.\n                if (req.responseType) {\n                    var responseType = req.responseType.toLowerCase();\n                    // JSON responses need to be processed as text. This is because if the server\n                    // returns an XSSI-prefixed JSON response, the browser will fail to parse it,\n                    // xhr.response will be null, and xhr.responseText cannot be accessed to\n                    // retrieve the prefixed JSON data in order to strip the prefix. Thus, all JSON\n                    // is parsed by first requesting text and then applying JSON.parse.\n                    xhr.responseType = ((responseType !== 'json') ? responseType : 'text');\n                }\n                // Serialize the request body if one is present. If not, this will be set to null.\n                var reqBody = req.serializeBody();\n                // If progress events are enabled, response headers will be delivered\n                // in two events - the HttpHeaderResponse event and the full HttpResponse\n                // event. However, since response headers don't change in between these\n                // two events, it doesn't make sense to parse them twice. So headerResponse\n                // caches the data extracted from the response whenever it's first parsed,\n                // to ensure parsing isn't duplicated.\n                var headerResponse = null;\n                // partialFromXhr extracts the HttpHeaderResponse from the current XMLHttpRequest\n                // state, and memoizes it into headerResponse.\n                var partialFromXhr = function () {\n                    if (headerResponse !== null) {\n                        return headerResponse;\n                    }\n                    // Read status and normalize an IE9 bug (http://bugs.jquery.com/ticket/1450).\n                    var status = xhr.status === 1223 ? 204 : xhr.status;\n                    var statusText = xhr.statusText || 'OK';\n                    // Parse headers from XMLHttpRequest - this step is lazy.\n                    var headers = new HttpHeaders(xhr.getAllResponseHeaders());\n                    // Read the response URL from the XMLHttpResponse instance and fall back on the\n                    // request URL.\n                    var url = getResponseUrl(xhr) || req.url;\n                    // Construct the HttpHeaderResponse and memoize it.\n                    headerResponse = new HttpHeaderResponse({ headers: headers, status: status, statusText: statusText, url: url });\n                    return headerResponse;\n                };\n                // Next, a few closures are defined for the various events which XMLHttpRequest can\n                // emit. This allows them to be unregistered as event listeners later.\n                // First up is the load event, which represents a response being fully available.\n                var onLoad = function () {\n                    // Read response state from the memoized partial data.\n                    var _a = partialFromXhr(), headers = _a.headers, status = _a.status, statusText = _a.statusText, url = _a.url;\n                    // The body will be read out if present.\n                    var body = null;\n                    if (status !== 204) {\n                        // Use XMLHttpRequest.response if set, responseText otherwise.\n                        body = (typeof xhr.response === 'undefined') ? xhr.responseText : xhr.response;\n                    }\n                    // Normalize another potential bug (this one comes from CORS).\n                    if (status === 0) {\n                        status = !!body ? 200 : 0;\n                    }\n                    // ok determines whether the response will be transmitted on the event or\n                    // error channel. Unsuccessful status codes (not 2xx) will always be errors,\n                    // but a successful status code can still result in an error if the user\n                    // asked for JSON data and the body cannot be parsed as such.\n                    var ok = status >= 200 && status < 300;\n                    // Check whether the body needs to be parsed as JSON (in many cases the browser\n                    // will have done that already).\n                    if (req.responseType === 'json' && typeof body === 'string') {\n                        // Save the original body, before attempting XSSI prefix stripping.\n                        var originalBody = body;\n                        body = body.replace(XSSI_PREFIX, '');\n                        try {\n                            // Attempt the parse. If it fails, a parse error should be delivered to the user.\n                            body = body !== '' ? JSON.parse(body) : null;\n                        }\n                        catch (error) {\n                            // Since the JSON.parse failed, it's reasonable to assume this might not have been a\n                            // JSON response. Restore the original body (including any XSSI prefix) to deliver\n                            // a better error response.\n                            body = originalBody;\n                            // If this was an error request to begin with, leave it as a string, it probably\n                            // just isn't JSON. Otherwise, deliver the parsing error to the user.\n                            if (ok) {\n                                // Even though the response status was 2xx, this is still an error.\n                                ok = false;\n                                // The parse error contains the text of the body that failed to parse.\n                                body = { error: error, text: body };\n                            }\n                        }\n                    }\n                    if (ok) {\n                        // A successful response is delivered on the event stream.\n                        observer.next(new HttpResponse({\n                            body: body,\n                            headers: headers,\n                            status: status,\n                            statusText: statusText,\n                            url: url || undefined,\n                        }));\n                        // The full body has been received and delivered, no further events\n                        // are possible. This request is complete.\n                        observer.complete();\n                    }\n                    else {\n                        // An unsuccessful request is delivered on the error channel.\n                        observer.error(new HttpErrorResponse({\n                            // The error in this case is the response body (error from the server).\n                            error: body,\n                            headers: headers,\n                            status: status,\n                            statusText: statusText,\n                            url: url || undefined,\n                        }));\n                    }\n                };\n                // The onError callback is called when something goes wrong at the network level.\n                // Connection timeout, DNS error, offline, etc. These are actual errors, and are\n                // transmitted on the error channel.\n                var onError = function (error) {\n                    var res = new HttpErrorResponse({\n                        error: error,\n                        status: xhr.status || 0,\n                        statusText: xhr.statusText || 'Unknown Error',\n                    });\n                    observer.error(res);\n                };\n                // The sentHeaders flag tracks whether the HttpResponseHeaders event\n                // has been sent on the stream. This is necessary to track if progress\n                // is enabled since the event will be sent on only the first download\n                // progerss event.\n                var sentHeaders = false;\n                // The download progress event handler, which is only registered if\n                // progress events are enabled.\n                var onDownProgress = function (event) {\n                    // Send the HttpResponseHeaders event if it hasn't been sent already.\n                    if (!sentHeaders) {\n                        observer.next(partialFromXhr());\n                        sentHeaders = true;\n                    }\n                    // Start building the download progress event to deliver on the response\n                    // event stream.\n                    var progressEvent = {\n                        type: HttpEventType.DownloadProgress,\n                        loaded: event.loaded,\n                    };\n                    // Set the total number of bytes in the event if it's available.\n                    if (event.lengthComputable) {\n                        progressEvent.total = event.total;\n                    }\n                    // If the request was for text content and a partial response is\n                    // available on XMLHttpRequest, include it in the progress event\n                    // to allow for streaming reads.\n                    if (req.responseType === 'text' && !!xhr.responseText) {\n                        progressEvent.partialText = xhr.responseText;\n                    }\n                    // Finally, fire the event.\n                    observer.next(progressEvent);\n                };\n                // The upload progress event handler, which is only registered if\n                // progress events are enabled.\n                var onUpProgress = function (event) {\n                    // Upload progress events are simpler. Begin building the progress\n                    // event.\n                    var progress = {\n                        type: HttpEventType.UploadProgress,\n                        loaded: event.loaded,\n                    };\n                    // If the total number of bytes being uploaded is available, include\n                    // it.\n                    if (event.lengthComputable) {\n                        progress.total = event.total;\n                    }\n                    // Send the event.\n                    observer.next(progress);\n                };\n                // By default, register for load and error events.\n                xhr.addEventListener('load', onLoad);\n                xhr.addEventListener('error', onError);\n                // Progress events are only enabled if requested.\n                if (req.reportProgress) {\n                    // Download progress is always enabled if requested.\n                    xhr.addEventListener('progress', onDownProgress);\n                    // Upload progress depends on whether there is a body to upload.\n                    if (reqBody !== null && xhr.upload) {\n                        xhr.upload.addEventListener('progress', onUpProgress);\n                    }\n                }\n                // Fire the request, and notify the event stream that it was fired.\n                xhr.send(reqBody);\n                observer.next({ type: HttpEventType.Sent });\n                // This is the return from the Observable function, which is the\n                // request cancellation handler.\n                return function () {\n                    // On a cancellation, remove all registered event listeners.\n                    xhr.removeEventListener('error', onError);\n                    xhr.removeEventListener('load', onLoad);\n                    if (req.reportProgress) {\n                        xhr.removeEventListener('progress', onDownProgress);\n                        if (reqBody !== null && xhr.upload) {\n                            xhr.upload.removeEventListener('progress', onUpProgress);\n                        }\n                    }\n                    // Finally, abort the in-flight request.\n                    xhr.abort();\n                };\n            });\n        };\n        HttpXhrBackend.decorators = [\n            { type: core.Injectable }\n        ];\n        /** @nocollapse */\n        HttpXhrBackend.ctorParameters = function () { return [\n            { type: XhrFactory, },\n        ]; };\n        return HttpXhrBackend;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var XSRF_COOKIE_NAME = new core.InjectionToken('XSRF_COOKIE_NAME');\n    var XSRF_HEADER_NAME = new core.InjectionToken('XSRF_HEADER_NAME');\n    /**\n     * Retrieves the current XSRF token to use with the next outgoing request.\n     *\n     *\n     */\n    var HttpXsrfTokenExtractor = /** @class */ (function () {\n        function HttpXsrfTokenExtractor() {\n        }\n        return HttpXsrfTokenExtractor;\n    }());\n    /**\n     * `HttpXsrfTokenExtractor` which retrieves the token from a cookie.\n     */\n    var HttpXsrfCookieExtractor = /** @class */ (function () {\n        function HttpXsrfCookieExtractor(doc, platform, cookieName) {\n            this.doc = doc;\n            this.platform = platform;\n            this.cookieName = cookieName;\n            this.lastCookieString = '';\n            this.lastToken = null;\n            /**\n               * @internal for testing\n               */\n            this.parseCount = 0;\n        }\n        HttpXsrfCookieExtractor.prototype.getToken = function () {\n            if (this.platform === 'server') {\n                return null;\n            }\n            var cookieString = this.doc.cookie || '';\n            if (cookieString !== this.lastCookieString) {\n                this.parseCount++;\n                this.lastToken = common.ɵparseCookieValue(cookieString, this.cookieName);\n                this.lastCookieString = cookieString;\n            }\n            return this.lastToken;\n        };\n        HttpXsrfCookieExtractor.decorators = [\n            { type: core.Injectable }\n        ];\n        /** @nocollapse */\n        HttpXsrfCookieExtractor.ctorParameters = function () { return [\n            { type: undefined, decorators: [{ type: core.Inject, args: [common.DOCUMENT,] },] },\n            { type: undefined, decorators: [{ type: core.Inject, args: [core.PLATFORM_ID,] },] },\n            { type: undefined, decorators: [{ type: core.Inject, args: [XSRF_COOKIE_NAME,] },] },\n        ]; };\n        return HttpXsrfCookieExtractor;\n    }());\n    /**\n     * `HttpInterceptor` which adds an XSRF token to eligible outgoing requests.\n     */\n    var HttpXsrfInterceptor = /** @class */ (function () {\n        function HttpXsrfInterceptor(tokenService, headerName) {\n            this.tokenService = tokenService;\n            this.headerName = headerName;\n        }\n        HttpXsrfInterceptor.prototype.intercept = function (req, next) {\n            var lcUrl = req.url.toLowerCase();\n            // Skip both non-mutating requests and absolute URLs.\n            // Non-mutating requests don't require a token, and absolute URLs require special handling\n            // anyway as the cookie set\n            // on our origin is not the same as the token expected by another origin.\n            if (req.method === 'GET' || req.method === 'HEAD' || lcUrl.startsWith('http://') ||\n                lcUrl.startsWith('https://')) {\n                return next.handle(req);\n            }\n            var token = this.tokenService.getToken();\n            // Be careful not to overwrite an existing header of the same name.\n            if (token !== null && !req.headers.has(this.headerName)) {\n                req = req.clone({ headers: req.headers.set(this.headerName, token) });\n            }\n            return next.handle(req);\n        };\n        HttpXsrfInterceptor.decorators = [\n            { type: core.Injectable }\n        ];\n        /** @nocollapse */\n        HttpXsrfInterceptor.ctorParameters = function () { return [\n            { type: HttpXsrfTokenExtractor, },\n            { type: undefined, decorators: [{ type: core.Inject, args: [XSRF_HEADER_NAME,] },] },\n        ]; };\n        return HttpXsrfInterceptor;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An `HttpHandler` that applies a bunch of `HttpInterceptor`s\n     * to a request before passing it to the given `HttpBackend`.\n     *\n     * The interceptors are loaded lazily from the injector, to allow\n     * interceptors to themselves inject classes depending indirectly\n     * on `HttpInterceptingHandler` itself.\n     */\n    var HttpInterceptingHandler = /** @class */ (function () {\n        function HttpInterceptingHandler(backend, injector) {\n            this.backend = backend;\n            this.injector = injector;\n            this.chain = null;\n        }\n        HttpInterceptingHandler.prototype.handle = function (req) {\n            if (this.chain === null) {\n                var interceptors = this.injector.get(HTTP_INTERCEPTORS, []);\n                this.chain = interceptors.reduceRight(function (next, interceptor) { return new HttpInterceptorHandler(next, interceptor); }, this.backend);\n            }\n            return this.chain.handle(req);\n        };\n        HttpInterceptingHandler.decorators = [\n            { type: core.Injectable }\n        ];\n        /** @nocollapse */\n        HttpInterceptingHandler.ctorParameters = function () { return [\n            { type: HttpBackend, },\n            { type: core.Injector, },\n        ]; };\n        return HttpInterceptingHandler;\n    }());\n    /**\n     * `NgModule` which adds XSRF protection support to outgoing requests.\n     *\n     * Provided the server supports a cookie-based XSRF protection system, this\n     * module can be used directly to configure XSRF protection with the correct\n     * cookie and header names.\n     *\n     * If no such names are provided, the default is to use `X-XSRF-TOKEN` for\n     * the header name and `XSRF-TOKEN` for the cookie name.\n     *\n     *\n     */\n    var HttpClientXsrfModule = /** @class */ (function () {\n        function HttpClientXsrfModule() {\n        }\n        /**\n         * Disable the default XSRF protection.\n         */\n        /**\n           * Disable the default XSRF protection.\n           */\n        HttpClientXsrfModule.disable = /**\n           * Disable the default XSRF protection.\n           */\n        function () {\n            return {\n                ngModule: HttpClientXsrfModule,\n                providers: [\n                    { provide: HttpXsrfInterceptor, useClass: NoopInterceptor },\n                ],\n            };\n        };\n        /**\n         * Configure XSRF protection to use the given cookie name or header name,\n         * or the default names (as described above) if not provided.\n         */\n        /**\n           * Configure XSRF protection to use the given cookie name or header name,\n           * or the default names (as described above) if not provided.\n           */\n        HttpClientXsrfModule.withOptions = /**\n           * Configure XSRF protection to use the given cookie name or header name,\n           * or the default names (as described above) if not provided.\n           */\n        function (options) {\n            if (options === void 0) { options = {}; }\n            return {\n                ngModule: HttpClientXsrfModule,\n                providers: [\n                    options.cookieName ? { provide: XSRF_COOKIE_NAME, useValue: options.cookieName } : [],\n                    options.headerName ? { provide: XSRF_HEADER_NAME, useValue: options.headerName } : [],\n                ],\n            };\n        };\n        HttpClientXsrfModule.decorators = [\n            { type: core.NgModule, args: [{\n                        providers: [\n                            HttpXsrfInterceptor,\n                            { provide: HTTP_INTERCEPTORS, useExisting: HttpXsrfInterceptor, multi: true },\n                            { provide: HttpXsrfTokenExtractor, useClass: HttpXsrfCookieExtractor },\n                            { provide: XSRF_COOKIE_NAME, useValue: 'XSRF-TOKEN' },\n                            { provide: XSRF_HEADER_NAME, useValue: 'X-XSRF-TOKEN' },\n                        ],\n                    },] }\n        ];\n        /** @nocollapse */\n        HttpClientXsrfModule.ctorParameters = function () { return []; };\n        return HttpClientXsrfModule;\n    }());\n    /**\n     * `NgModule` which provides the `HttpClient` and associated services.\n     *\n     * Interceptors can be added to the chain behind `HttpClient` by binding them\n     * to the multiprovider for `HTTP_INTERCEPTORS`.\n     *\n     *\n     */\n    var HttpClientModule = /** @class */ (function () {\n        function HttpClientModule() {\n        }\n        HttpClientModule.decorators = [\n            { type: core.NgModule, args: [{\n                        imports: [\n                            HttpClientXsrfModule.withOptions({\n                                cookieName: 'XSRF-TOKEN',\n                                headerName: 'X-XSRF-TOKEN',\n                            }),\n                        ],\n                        providers: [\n                            HttpClient,\n                            { provide: HttpHandler, useClass: HttpInterceptingHandler },\n                            HttpXhrBackend,\n                            { provide: HttpBackend, useExisting: HttpXhrBackend },\n                            BrowserXhr,\n                            { provide: XhrFactory, useExisting: BrowserXhr },\n                        ],\n                    },] }\n        ];\n        /** @nocollapse */\n        HttpClientModule.ctorParameters = function () { return []; };\n        return HttpClientModule;\n    }());\n\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes} checked by tsc\r\n     */\r\n    var AgmDirection = /** @class */ (function () {\r\n        function AgmDirection(gmapsApi, http) {\r\n            this.gmapsApi = gmapsApi;\r\n            this.http = http;\r\n            this.travelMode = 'DRIVING';\r\n            this.transitOptions = undefined;\r\n            this.drivingOptions = undefined;\r\n            this.waypoints = [];\r\n            this.optimizeWaypoints = true;\r\n            this.provideRouteAlternatives = false;\r\n            this.avoidHighways = false;\r\n            this.avoidTolls = false;\r\n            this.visible = true;\r\n            // Direction change event handler\r\n            this.onChange = new core.EventEmitter();\r\n            // Direction response for the new request\r\n            this.onResponse = new core.EventEmitter();\r\n            this.sendInfoWindow = new core.EventEmitter();\r\n            this.directionsService = undefined;\r\n            this.directionsDisplay = undefined;\r\n            this.waypointsMarker = [];\r\n            this.isFirstChange = true;\r\n        }\r\n        /**\r\n         * @return {?}\r\n         */\r\n        AgmDirection.prototype.ngOnInit = /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            if (this.visible === true) {\r\n                this.directionDraw();\r\n            }\r\n        };\r\n        /**\r\n         * @param {?} obj\r\n         * @return {?}\r\n         */\r\n        AgmDirection.prototype.ngOnChanges = /**\r\n         * @param {?} obj\r\n         * @return {?}\r\n         */\r\n        function (obj) {\r\n            /**\r\n                 * When visible is false then remove the direction layer\r\n                 */\r\n            if (!this.visible) {\r\n                try {\r\n                    if (typeof this.originMarker !== 'undefined') {\r\n                        this.originMarker.setMap(null);\r\n                        this.destinationMarker.setMap(null);\r\n                        this.waypointsMarker.forEach(function (w) { return w.setMap(null); });\r\n                    }\r\n                    this.directionsDisplay.setPanel(null);\r\n                    this.directionsDisplay.setMap(null);\r\n                    this.directionsDisplay = undefined;\r\n                }\r\n                catch (/** @type {?} */ e) { }\r\n            }\r\n            else {\r\n                if (this.isFirstChange) {\r\n                    /**\r\n                             * When visible is false at the first time\r\n                             */\r\n                    if (typeof this.directionsDisplay === 'undefined') {\r\n                        this.directionDraw();\r\n                    }\r\n                    this.isFirstChange = false;\r\n                    return;\r\n                }\r\n                /**\r\n                       * When renderOptions are not first change then reset the display\r\n                       */\r\n                if (typeof obj.renderOptions !== 'undefined') {\r\n                    if (obj.renderOptions.firstChange === false) {\r\n                        if (typeof this.originMarker !== 'undefined') {\r\n                            this.originMarker.setMap(null);\r\n                            this.destinationMarker.setMap(null);\r\n                            this.waypointsMarker.forEach(function (w) { return w.setMap(null); });\r\n                        }\r\n                        this.directionsDisplay.setPanel(null);\r\n                        this.directionsDisplay.setMap(null);\r\n                        this.directionsDisplay = undefined;\r\n                    }\r\n                }\r\n                this.directionDraw();\r\n            }\r\n        };\r\n        /**\r\n         * This event is fired when the user creating or updating this direction\r\n         * @return {?}\r\n         */\r\n        AgmDirection.prototype.directionDraw = /**\r\n         * This event is fired when the user creating or updating this direction\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            var _this = this;\r\n            this.gmapsApi.getNativeMap().then(function (map) {\r\n                if (typeof _this.directionsDisplay === 'undefined') {\r\n                    _this.directionsDisplay = new google.maps.DirectionsRenderer(_this.renderOptions);\r\n                    _this.directionsDisplay.setMap(map);\r\n                    _this.directionsDisplay.addListener('directions_changed', function () {\r\n                        _this.onChange.emit(_this.directionsDisplay.getDirections());\r\n                    });\r\n                }\r\n                if (typeof _this.directionsService === 'undefined') {\r\n                    _this.directionsService = new google.maps.DirectionsService;\r\n                }\r\n                if (typeof _this.panel === 'undefined') {\r\n                    _this.directionsDisplay.setPanel(null);\r\n                }\r\n                else {\r\n                    _this.directionsDisplay.setPanel(_this.panel);\r\n                }\r\n                var /** @type {?} */ requestObj = {\r\n                    origin: _this.origin,\r\n                    destination: _this.destination,\r\n                    waypoints: _this.waypoints\r\n                };\r\n                /**\r\n                 * @param {?} s\r\n                 * @return {?}\r\n                 */\r\n                function hashCode(s) {\r\n                    for (var /** @type {?} */ i = 0, /** @type {?} */ h = 0; i < s.length; i++) {\r\n                        h = Math.imul(31, h) + s.charCodeAt(i) | 0;\r\n                    }\r\n                    return h;\r\n                }\r\n                var /** @type {?} */ hash = hashCode(JSON.stringify(requestObj));\r\n                // Render exist direction\r\n                if (typeof _this.renderRoute === 'object' && _this.renderRoute !== null) {\r\n                    _this.directionsDisplay.setDirections(_this.renderRoute);\r\n                    _this.renderRoute = null; // or set undefined, ''\r\n                }\r\n                else {\r\n                    //   if ((window)[<any>'featureToggles'][<any>'CacheThirdPartyApi'].toString() === 'true')\r\n                    if ((/** @type {?} */ (window)).featureToggles.CacheThirdPartyApi === 'true') {\r\n                        _this.http.get(\"/umbraco/api/thirdpartycaching/GetGoogleDirections?request=\" + hash).subscribe(function (cacheResponse) {\r\n                            console.log('cached response: ', cacheResponse);\r\n                            if (cacheResponse == null) {\r\n                                // Request new direction\r\n                                // Request new direction\r\n                                _this.directionsService.route({\r\n                                    origin: _this.origin,\r\n                                    destination: _this.destination,\r\n                                    travelMode: _this.travelMode,\r\n                                    transitOptions: _this.transitOptions,\r\n                                    drivingOptions: _this.drivingOptions,\r\n                                    waypoints: _this.waypoints,\r\n                                    optimizeWaypoints: _this.optimizeWaypoints,\r\n                                    provideRouteAlternatives: _this.provideRouteAlternatives,\r\n                                    avoidHighways: _this.avoidHighways,\r\n                                    avoidTolls: _this.avoidTolls,\r\n                                }, function (response, status) {\r\n                                    _this.onResponse.emit(response);\r\n                                    if (status === 'OK') {\r\n                                        _this.directionsDisplay.setDirections(response);\r\n                                        _this.http.post(\"/umbraco/api/thirdpartycaching/SaveGoogleDirections?request=\" + hash, response).subscribe(function (saveRes) {\r\n                                            console.log('save response:', saveRes);\r\n                                        });\r\n                                        /**\r\n                                                         * Emit The DirectionsResult Object\r\n                                                         * https://developers.google.com/maps/documentation/javascript/directions?hl=en#DirectionsResults\r\n                                                         */\r\n                                        // Custom Markers\r\n                                        if (typeof _this.markerOptions !== 'undefined') {\r\n                                            // Remove origin markers\r\n                                            try {\r\n                                                if (typeof _this.originMarker !== 'undefined') {\r\n                                                    google.maps.event.clearListeners(_this.originMarker, 'click');\r\n                                                    _this.originMarker.setMap(null);\r\n                                                }\r\n                                                if (typeof _this.destinationMarker !== 'undefined') {\r\n                                                    google.maps.event.clearListeners(_this.destinationMarker, 'click');\r\n                                                    _this.destinationMarker.setMap(null);\r\n                                                }\r\n                                                _this.waypointsMarker.forEach(function (w) {\r\n                                                    if (typeof w !== 'undefined') {\r\n                                                        google.maps.event.clearListeners(w, 'click');\r\n                                                        w.setMap(null);\r\n                                                    }\r\n                                                });\r\n                                            }\r\n                                            catch (/** @type {?} */ err) {\r\n                                                console.error('Can not reset custom marker.', err);\r\n                                            }\r\n                                            // Set custom markers\r\n                                            var /** @type {?} */ _route_1 = response.routes[0].legs[0];\r\n                                            try {\r\n                                                // Origin Marker\r\n                                                if (typeof _this.markerOptions.origin !== 'undefined') {\r\n                                                    _this.markerOptions.origin.map = map;\r\n                                                    _this.markerOptions.origin.position = _route_1.start_location;\r\n                                                    _this.originMarker = _this.setMarker(map, _this.originMarker, _this.markerOptions.origin, _route_1.start_address);\r\n                                                }\r\n                                                // Destination Marker\r\n                                                if (typeof _this.markerOptions.destination !== 'undefined') {\r\n                                                    _this.markerOptions.destination.map = map;\r\n                                                    _this.markerOptions.destination.position = _route_1.end_location;\r\n                                                    _this.destinationMarker = _this.setMarker(map, _this.destinationMarker, _this.markerOptions.destination, _route_1.end_address);\r\n                                                }\r\n                                                // Waypoints Marker\r\n                                                if (typeof _this.markerOptions.waypoints !== 'undefined') {\r\n                                                    _this.waypoints.forEach(function (waypoint, index) {\r\n                                                        // If waypoints are not array then set all the same\r\n                                                        if (!Array.isArray(_this.markerOptions.waypoints)) {\r\n                                                            _this.markerOptions.waypoints.map = map;\r\n                                                            _this.markerOptions.waypoints.position = _route_1.via_waypoints[index];\r\n                                                            _this.waypointsMarker.push(_this.setMarker(map, waypoint, _this.markerOptions.waypoints, _route_1.via_waypoints[index]));\r\n                                                        }\r\n                                                        else {\r\n                                                            _this.markerOptions.waypoints[index].map = map;\r\n                                                            _this.markerOptions.waypoints[index].position = _route_1.via_waypoints[index];\r\n                                                            _this.waypointsMarker.push(_this.setMarker(map, waypoint, _this.markerOptions.waypoints[index], _route_1.via_waypoints[index]));\r\n                                                        }\r\n                                                    }); // End forEach\r\n                                                }\r\n                                            }\r\n                                            catch (/** @type {?} */ err) {\r\n                                                console.error('MarkerOptions error.', err);\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                });\r\n                            }\r\n                            else {\r\n                                _this.onResponse.emit(cacheResponse);\r\n                                _this.directionsDisplay.setDirections(cacheResponse);\r\n                                /**\r\n                                               * Emit The DirectionsResult Object\r\n                                               * https://developers.google.com/maps/documentation/javascript/directions?hl=en#DirectionsResults\r\n                                               */\r\n                                // Custom Markers\r\n                                if (typeof _this.markerOptions !== 'undefined') {\r\n                                    // Remove origin markers\r\n                                    try {\r\n                                        if (typeof _this.originMarker !== 'undefined') {\r\n                                            google.maps.event.clearListeners(_this.originMarker, 'click');\r\n                                            _this.originMarker.setMap(null);\r\n                                        }\r\n                                        if (typeof _this.destinationMarker !== 'undefined') {\r\n                                            google.maps.event.clearListeners(_this.destinationMarker, 'click');\r\n                                            _this.destinationMarker.setMap(null);\r\n                                        }\r\n                                        _this.waypointsMarker.forEach(function (w) {\r\n                                            if (typeof w !== 'undefined') {\r\n                                                google.maps.event.clearListeners(w, 'click');\r\n                                                w.setMap(null);\r\n                                            }\r\n                                        });\r\n                                    }\r\n                                    catch (/** @type {?} */ err) {\r\n                                        console.error('Can not reset custom marker.', err);\r\n                                    }\r\n                                    // Set custom markers\r\n                                    var /** @type {?} */ _route_2 = cacheResponse.routes[0].legs[0];\r\n                                    try {\r\n                                        // Origin Marker\r\n                                        if (typeof _this.markerOptions.origin !== 'undefined') {\r\n                                            _this.markerOptions.origin.map = map;\r\n                                            _this.markerOptions.origin.position = _route_2.start_location;\r\n                                            _this.originMarker = _this.setMarker(map, _this.originMarker, _this.markerOptions.origin, _route_2.start_address);\r\n                                        }\r\n                                        // Destination Marker\r\n                                        if (typeof _this.markerOptions.destination !== 'undefined') {\r\n                                            _this.markerOptions.destination.map = map;\r\n                                            _this.markerOptions.destination.position = _route_2.end_location;\r\n                                            _this.destinationMarker = _this.setMarker(map, _this.destinationMarker, _this.markerOptions.destination, _route_2.end_address);\r\n                                        }\r\n                                        // Waypoints Marker\r\n                                        if (typeof _this.markerOptions.waypoints !== 'undefined') {\r\n                                            _this.waypoints.forEach(function (waypoint, index) {\r\n                                                // If waypoints are not array then set all the same\r\n                                                if (!Array.isArray(_this.markerOptions.waypoints)) {\r\n                                                    _this.markerOptions.waypoints.map = map;\r\n                                                    _this.markerOptions.waypoints.position = _route_2.via_waypoints[index];\r\n                                                    _this.waypointsMarker.push(_this.setMarker(map, waypoint, _this.markerOptions.waypoints, _route_2.via_waypoints[index]));\r\n                                                }\r\n                                                else {\r\n                                                    _this.markerOptions.waypoints[index].map = map;\r\n                                                    _this.markerOptions.waypoints[index].position = _route_2.via_waypoints[index];\r\n                                                    _this.waypointsMarker.push(_this.setMarker(map, waypoint, _this.markerOptions.waypoints[index], _route_2.via_waypoints[index]));\r\n                                                }\r\n                                            }); // End forEach\r\n                                        }\r\n                                    }\r\n                                    catch (/** @type {?} */ err) {\r\n                                        console.error('MarkerOptions error.', err);\r\n                                    }\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                    else {\r\n                        // Request new direction\r\n                        // Request new direction\r\n                        _this.directionsService.route({\r\n                            origin: _this.origin,\r\n                            destination: _this.destination,\r\n                            travelMode: _this.travelMode,\r\n                            transitOptions: _this.transitOptions,\r\n                            drivingOptions: _this.drivingOptions,\r\n                            waypoints: _this.waypoints,\r\n                            optimizeWaypoints: _this.optimizeWaypoints,\r\n                            provideRouteAlternatives: _this.provideRouteAlternatives,\r\n                            avoidHighways: _this.avoidHighways,\r\n                            avoidTolls: _this.avoidTolls,\r\n                        }, function (response, status) {\r\n                            _this.onResponse.emit(response);\r\n                            if (status === 'OK') {\r\n                                _this.directionsDisplay.setDirections(response);\r\n                                _this.http.post(\"/umbraco/api/thirdpartycaching/SaveGoogleDirections?request=\" + hash, response).subscribe(function (saveRes) {\r\n                                    console.log('save response:', saveRes);\r\n                                });\r\n                                /**\r\n                                                   * Emit The DirectionsResult Object\r\n                                                   * https://developers.google.com/maps/documentation/javascript/directions?hl=en#DirectionsResults\r\n                                                   */\r\n                                // Custom Markers\r\n                                if (typeof _this.markerOptions !== 'undefined') {\r\n                                    // Remove origin markers\r\n                                    try {\r\n                                        if (typeof _this.originMarker !== 'undefined') {\r\n                                            google.maps.event.clearListeners(_this.originMarker, 'click');\r\n                                            _this.originMarker.setMap(null);\r\n                                        }\r\n                                        if (typeof _this.destinationMarker !== 'undefined') {\r\n                                            google.maps.event.clearListeners(_this.destinationMarker, 'click');\r\n                                            _this.destinationMarker.setMap(null);\r\n                                        }\r\n                                        _this.waypointsMarker.forEach(function (w) {\r\n                                            if (typeof w !== 'undefined') {\r\n                                                google.maps.event.clearListeners(w, 'click');\r\n                                                w.setMap(null);\r\n                                            }\r\n                                        });\r\n                                    }\r\n                                    catch (/** @type {?} */ err) {\r\n                                        console.error('Can not reset custom marker.', err);\r\n                                    }\r\n                                    // Set custom markers\r\n                                    var /** @type {?} */ _route_3 = response.routes[0].legs[0];\r\n                                    try {\r\n                                        // Origin Marker\r\n                                        if (typeof _this.markerOptions.origin !== 'undefined') {\r\n                                            _this.markerOptions.origin.map = map;\r\n                                            _this.markerOptions.origin.position = _route_3.start_location;\r\n                                            _this.originMarker = _this.setMarker(map, _this.originMarker, _this.markerOptions.origin, _route_3.start_address);\r\n                                        }\r\n                                        // Destination Marker\r\n                                        if (typeof _this.markerOptions.destination !== 'undefined') {\r\n                                            _this.markerOptions.destination.map = map;\r\n                                            _this.markerOptions.destination.position = _route_3.end_location;\r\n                                            _this.destinationMarker = _this.setMarker(map, _this.destinationMarker, _this.markerOptions.destination, _route_3.end_address);\r\n                                        }\r\n                                        // Waypoints Marker\r\n                                        if (typeof _this.markerOptions.waypoints !== 'undefined') {\r\n                                            _this.waypoints.forEach(function (waypoint, index) {\r\n                                                // If waypoints are not array then set all the same\r\n                                                if (!Array.isArray(_this.markerOptions.waypoints)) {\r\n                                                    _this.markerOptions.waypoints.map = map;\r\n                                                    _this.markerOptions.waypoints.position = _route_3.via_waypoints[index];\r\n                                                    _this.waypointsMarker.push(_this.setMarker(map, waypoint, _this.markerOptions.waypoints, _route_3.via_waypoints[index]));\r\n                                                }\r\n                                                else {\r\n                                                    _this.markerOptions.waypoints[index].map = map;\r\n                                                    _this.markerOptions.waypoints[index].position = _route_3.via_waypoints[index];\r\n                                                    _this.waypointsMarker.push(_this.setMarker(map, waypoint, _this.markerOptions.waypoints[index], _route_3.via_waypoints[index]));\r\n                                                }\r\n                                            }); // End forEach\r\n                                        }\r\n                                    }\r\n                                    catch (/** @type {?} */ err) {\r\n                                        console.error('MarkerOptions error.', err);\r\n                                    }\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n            });\r\n        };\r\n        /**\r\n         * Custom Origin and Destination Icon\r\n         * \\@memberof AgmDirection\r\n         * @param {?} map map\r\n         * @param {?} marker marker\r\n         * @param {?} markerOpts properties\r\n         * @param {?} content marker's infowindow content\r\n         * @return {?} new marker\r\n         */\r\n        AgmDirection.prototype.setMarker = /**\r\n         * Custom Origin and Destination Icon\r\n         * \\@memberof AgmDirection\r\n         * @param {?} map map\r\n         * @param {?} marker marker\r\n         * @param {?} markerOpts properties\r\n         * @param {?} content marker's infowindow content\r\n         * @return {?} new marker\r\n         */\r\n        function (map, marker, markerOpts, content) {\r\n            var _this = this;\r\n            if (typeof this.infoWindow === 'undefined') {\r\n                this.infoWindow = new google.maps.InfoWindow({});\r\n                this.sendInfoWindow.emit(this.infoWindow);\r\n            }\r\n            marker = new google.maps.Marker(markerOpts);\r\n            marker.addListener('click', function () {\r\n                var /** @type {?} */ infowindoContent = typeof markerOpts.infoWindow === 'undefined' ? content : markerOpts.infoWindow;\r\n                _this.infoWindow.setContent(infowindoContent);\r\n                _this.infoWindow.open(map, marker);\r\n            });\r\n            return marker;\r\n        };\r\n        AgmDirection.decorators = [\r\n            { type: core.Directive, args: [{\r\n                        selector: 'agm-direction',\r\n                    },] }\r\n        ];\r\n        /** @nocollapse */\r\n        AgmDirection.ctorParameters = function () { return [\r\n            { type: GoogleMapsAPIWrapper, },\r\n            { type: HttpClient, },\r\n        ]; };\r\n        AgmDirection.propDecorators = {\r\n            \"origin\": [{ type: core.Input },],\r\n            \"destination\": [{ type: core.Input },],\r\n            \"travelMode\": [{ type: core.Input },],\r\n            \"transitOptions\": [{ type: core.Input },],\r\n            \"drivingOptions\": [{ type: core.Input },],\r\n            \"waypoints\": [{ type: core.Input },],\r\n            \"optimizeWaypoints\": [{ type: core.Input },],\r\n            \"provideRouteAlternatives\": [{ type: core.Input },],\r\n            \"avoidHighways\": [{ type: core.Input },],\r\n            \"avoidTolls\": [{ type: core.Input },],\r\n            \"renderOptions\": [{ type: core.Input },],\r\n            \"visible\": [{ type: core.Input },],\r\n            \"panel\": [{ type: core.Input },],\r\n            \"markerOptions\": [{ type: core.Input },],\r\n            \"infoWindow\": [{ type: core.Input },],\r\n            \"renderRoute\": [{ type: core.Input },],\r\n            \"onChange\": [{ type: core.Output },],\r\n            \"onResponse\": [{ type: core.Output },],\r\n            \"sendInfoWindow\": [{ type: core.Output },],\r\n        };\r\n        return AgmDirection;\r\n    }());\n\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes} checked by tsc\r\n     */\r\n    var AgmDirectionModule = /** @class */ (function () {\r\n        function AgmDirectionModule() {\r\n        }\r\n        /**\r\n         * @return {?}\r\n         */\r\n        AgmDirectionModule.forRoot = /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return {\r\n                ngModule: AgmDirectionModule,\r\n            };\r\n        };\r\n        AgmDirectionModule.decorators = [\r\n            { type: core.NgModule, args: [{\r\n                        imports: [\r\n                            HttpClientModule,\r\n                        ],\r\n                        declarations: [\r\n                            AgmDirection,\r\n                        ],\r\n                        exports: [\r\n                            AgmDirection,\r\n                        ]\r\n                    },] }\r\n        ];\r\n        return AgmDirectionModule;\r\n    }());\n\n    exports.AgmDirectionModule = AgmDirectionModule;\n    exports.ɵa = AgmDirection;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=agm-direction.umd.js.map\n"]}